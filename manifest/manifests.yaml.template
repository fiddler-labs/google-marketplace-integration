---
# Source: fiddler/charts/clickhouse/templates/secret-clickhouse.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clickhouse-credentials
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
stringData:
  host: 'clickhouse-hl.$namespace'
  port: "9000"
  http_port: "8123"
  http_protocol: "http"
  user: 'fiddler_$hostName'
  password: '$hostName'
  database: '$hostName'
  secure: ""
  verify: ""
  cluster: "fiddler"
---
# Source: fiddler/charts/clickhouse/templates/secret-clickhouse.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clickhouse-users
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
stringData:
  users.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <profiles>
            <default>
                <distributed_product_mode>global</distributed_product_mode>
                <load_balancing>random</load_balancing>
                <max_ast_elements>1500000</max_ast_elements>
                <max_bytes_before_external_group_by>2000000000</max_bytes_before_external_group_by>
                <max_bytes_before_external_sort>2000000000</max_bytes_before_external_sort>
                <max_expanded_ast_elements>1500000</max_expanded_ast_elements>
                <max_insert_block_size>10000000</max_insert_block_size>
                <max_memory_usage>10000000000</max_memory_usage>
                <max_query_size>50000000</max_query_size>
            </default>
            <readonly>
                <readonly>1</readonly>
            </readonly>
        </profiles>
        <users>
            <default>
                <password>fiddler</password>
                <networks>
                    <ip>::1</ip>
                    <ip>127.0.0.1</ip>
                </networks>
                <profile>readonly</profile>
                <quota>default</quota>
                <!-- <access_management>1</access_management> -->
            </default>
            <fiddler>
                <password>fiddler</password>
                <networks>
                    <ip>::/0</ip>
                </networks>
                <profile>default</profile>
                <quota>default</quota>
                <access_management>1</access_management>
            </fiddler>
        </users>
        <quotas>
            <default>
                <interval>
                    <duration>3600</duration>
                    <queries>0</queries>
                    <errors>0</errors>
                    <result_rows>0</result_rows>
                    <read_rows>0</read_rows>
                    <execution_time>0</execution_time>
                </interval>
            </default>
        </quotas>
    </yandex>
---
# Source: fiddler/charts/clickhouse/templates/secret-clickhouse.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clickhouse-init-scripts
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
stringData:
  create_db.sh: |
    #!/bin/bash
    chsql() {
        clickhouse-client --host ${CH_HOST} --port ${CH_PORT} --user ${CH_ADMIN_USER} --password ${CH_ADMIN_PASS} --database ${CH_DEFAULT_DATABASE} -t --query "$1";
    }
    sleep 120
    chsql "CREATE DATABASE IF NOT EXISTS ${CH_DATABASE} ON CLUSTER ${CH_CLUSTER};"
    chsql "CREATE USER OR REPLACE ${CH_USER} ON CLUSTER ${CH_CLUSTER} IDENTIFIED WITH plaintext_password BY '${CH_PASSWD}';"
    chsql "GRANT ON CLUSTER ${CH_CLUSTER} ALL ON ${CH_DATABASE}.* TO ${CH_USER};"
    chsql "GRANT ON CLUSTER ${CH_CLUSTER} REMOTE ON *.* TO ${CH_USER};"
---
# Source: fiddler/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: $namespace
  labels:
    helm.sh/chart: grafana-6.57.3
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/version: "24.4.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  admin-user: $grafanaAdminUser
  admin-password: $grafanaAdminPassword
  ldap-toml: ""
---
# Source: fiddler/charts/loki/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: loki
  namespace: $namespace
  labels:
    app: loki
    chart: loki-2.12.0
    release: fiddler
    heritage: Helm
data:
  loki.yaml: YXV0aF9lbmFibGVkOiBmYWxzZQpjaHVua19zdG9yZV9jb25maWc6CiAgbWF4X2xvb2tfYmFja19wZXJpb2Q6IDBzCmNvbXBhY3RvcjoKICBjb21wYWN0aW9uX2ludGVydmFsOiAxMG0KICByZXRlbnRpb25fZGVsZXRlX2RlbGF5OiAyaAogIHJldGVudGlvbl9kZWxldGVfd29ya2VyX2NvdW50OiAxNTAKICByZXRlbnRpb25fZW5hYmxlZDogdHJ1ZQogIHNoYXJlZF9zdG9yZTogZmlsZXN5c3RlbQogIHdvcmtpbmdfZGlyZWN0b3J5OiAvZGF0YS9sb2tpL2JvbHRkYi1zaGlwcGVyLWNvbXBhY3Rvcgppbmdlc3RlcjoKICBjaHVua19ibG9ja19zaXplOiAyNjIxNDQKICBjaHVua19pZGxlX3BlcmlvZDogM20KICBjaHVua19yZXRhaW5fcGVyaW9kOiAxbQogIGxpZmVjeWNsZXI6CiAgICByaW5nOgogICAgICByZXBsaWNhdGlvbl9mYWN0b3I6IDEKICBtYXhfdHJhbnNmZXJfcmV0cmllczogMAogIHdhbDoKICAgIGRpcjogL2RhdGEvbG9raS93YWwKbGltaXRzX2NvbmZpZzoKICBlbmZvcmNlX21ldHJpY19uYW1lOiBmYWxzZQogIG1heF9lbnRyaWVzX2xpbWl0X3Blcl9xdWVyeTogNTAwMAogIHJlamVjdF9vbGRfc2FtcGxlczogdHJ1ZQogIHJlamVjdF9vbGRfc2FtcGxlc19tYXhfYWdlOiAxNjhoCiAgcmV0ZW50aW9uX3BlcmlvZDogMzM2aAptZW1iZXJsaXN0OgogIGpvaW5fbWVtYmVyczoKICAtICdsb2tpLW1lbWJlcmxpc3QnCnNjaGVtYV9jb25maWc6CiAgY29uZmlnczoKICAtIGZyb206ICIyMDIwLTEwLTI0IgogICAgaW5kZXg6CiAgICAgIHBlcmlvZDogMjRoCiAgICAgIHByZWZpeDogaW5kZXhfCiAgICBvYmplY3Rfc3RvcmU6IGZpbGVzeXN0ZW0KICAgIHNjaGVtYTogdjExCiAgICBzdG9yZTogYm9sdGRiLXNoaXBwZXIKc2VydmVyOgogIGdycGNfbGlzdGVuX3BvcnQ6IDkwOTUKICBodHRwX2xpc3Rlbl9wb3J0OiAzMTAwCnN0b3JhZ2VfY29uZmlnOgogIGJvbHRkYl9zaGlwcGVyOgogICAgYWN0aXZlX2luZGV4X2RpcmVjdG9yeTogL2RhdGEvbG9raS9ib2x0ZGItc2hpcHBlci1hY3RpdmUKICAgIGNhY2hlX2xvY2F0aW9uOiAvZGF0YS9sb2tpL2JvbHRkYi1zaGlwcGVyLWNhY2hlCiAgICBjYWNoZV90dGw6IDI0aAogICAgc2hhcmVkX3N0b3JlOiBmaWxlc3lzdGVtCiAgZmlsZXN5c3RlbToKICAgIGRpcmVjdG9yeTogL2RhdGEvbG9raS9jaHVua3MKdGFibGVfbWFuYWdlcjoKICByZXRlbnRpb25fZGVsZXRlc19lbmFibGVkOiBmYWxzZQogIHJldGVudGlvbl9wZXJpb2Q6IDBz
---
# Source: fiddler/charts/minio/templates/secret-minio.yaml
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: $namespace
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.0.15
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: minio
stringData:
  endpointURL: 'http://minio.$namespace:9000'
  storeType: "s3"
  bucketName: "fiddler"
  keyPrefix: ""
  accessKeyId: "minio"
  secretAccessKey: "minio123"
---
# Source: fiddler/charts/rabbitmq/templates/secret-rabbitmq.yaml
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-credentials
  namespace: $namespace
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-0.0.14
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: rabbitmq
stringData:
  broker_host: 'rabbitmq.$namespace'
  broker_port: "5672"
  broker_http_port: "15672"
  broker_user: "fiddler"
  broker_password: "fiddler"
  broker_useSSL: "0"
  celery_broker_host: 'rabbitmq.$namespace'
  celery_broker_port: "5672"
  celery_broker_http_port: "15672"
  celery_broker_user: "fiddler"
  celery_broker_password: "fiddler"
  celery_broker_useSSL: "0"
  celery_broker_keyPrefix: '$hostName'
---
# Source: fiddler/charts/redis/templates/secret-redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
stringData:
  writeEndpoint: 'redis.$namespace:6379'
  readEndpoint: 'redis.$namespace:6379'
  port: "6379"
  scheme: redis
  database: "2"
  username: "fiddler"
  password: "fiddler"
  keyPrefix: '$namespace'
---
# Source: fiddler/templates/admin/secret-admin.yaml
apiVersion: v1
kind: Secret
metadata:
  name: admin-service-credentials
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
data:
  admin-service-token: TmNleFcxc3JURG1CWmpXNFRMMURLSnhyQm04MFEzM0xDbWF3RFU5RXdMZw==
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: grafana-db-credentials
  namespace: $namespace
  labels:
    app: grafana
stringData:
  host: '$postgresHost'
  user: '$postgresUser'
  password: '$postgresPassword'
  db_name: "grafana"
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: custom-grafana-upload-dashboards
  namespace: $namespace
  labels:
    app: grafana
data:
  upload_dashboards.sh: |
    IyEvYmluL3NoCnNsZWVwIDMwCkZJTEVTX1BBVEg9Ii92YXIvbGliL2dyYWZhbmEvZGFzaGJvYXJkcyIKZm9yIGZpbGUgaW4gIiRGSUxFU19QQVRIIi8qLmpzb247IGRvCmlmIFsgLWYgIiRmaWxlIiBdOyB0aGVuCiAgY3VybCAtWCBQT1NUIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIC1kIEAkZmlsZSBodHRwOi8vJEdGX1NFQ1VSSVRZX0FETUlOX1VTRVI6JEdGX1NFQ1VSSVRZX0FETUlOX1BBU1NXT1JEQGxvY2FsaG9zdDozMDAwL2FwaS9kYXNoYm9hcmRzL2RiICA+IC9wcm9jLzEvZmQvMQpmaQpkb25l
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fiddler-service-overview-dashboard
  namespace: $namespace
  labels:
    app: grafana
data:
  fiddler-service_overview-dashboard.json: |
    
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fiddler-rabbitmq-overview-dashboard
  namespace: $namespace
  labels:
    app: grafana
data:
  fiddler-rabbitmq-overview.json: |
    
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fiddler-async-job-status-dashboard
  namespace: $namespace
  labels:
    app: grafana
data:
  fiddler-async-job-status-dashboard.json: |
    
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fiddler-api-dashboard
  namespace: $namespace
  labels:
    app: grafana
data:
  fiddler-api-dashboard.json: |
    eyJkYXNoYm9hcmQiOiB7ImFubm90YXRpb25zIjp7Imxpc3QiOlt7ImJ1aWx0SW4iOjEsImRhdGFzb3VyY2UiOnsidHlwZSI6ImdyYWZhbmEiLCJ1aWQiOiItLSBHcmFmYW5hIC0tIn0sImVuYWJsZSI6dHJ1ZSwiaGlkZSI6dHJ1ZSwiaWNvbkNvbG9yIjoicmdiYSgwLCAyMTEsIDI1NSwgMSkiLCJuYW1lIjoiQW5ub3RhdGlvbnMgJiBBbGVydHMiLCJ0YXJnZXQiOnsibGltaXQiOjEwMCwibWF0Y2hBbnkiOmZhbHNlLCJ0YWdzIjpbXSwidHlwZSI6ImRhc2hib2FyZCJ9LCJ0eXBlIjoiZGFzaGJvYXJkIn1dfSwiZWRpdGFibGUiOnRydWUsImZpc2NhbFllYXJTdGFydE1vbnRoIjowLCJncmFwaFRvb2x0aXAiOjAsImlkIjpudWxsLCJpdGVyYXRpb24iOjE2ODc5OTg4MTYyNjQsImxpbmtzIjpbXSwibGl2ZU5vdyI6ZmFsc2UsInBhbmVscyI6W3siY29sbGFwc2VkIjpmYWxzZSwiZ3JpZFBvcyI6eyJoIjoxLCJ3IjoyNCwieCI6MCwieSI6MH0sImlkIjo0LCJwYW5lbHMiOltdLCJyZXBlYXQiOiJlbmRwb2ludCIsInJlcGVhdERpcmVjdGlvbiI6ImgiLCJ0aXRsZSI6IiRlbmRwb2ludCIsInR5cGUiOiJyb3cifSx7ImRhdGFzb3VyY2UiOnsidHlwZSI6InByb21ldGhldXMiLCJ1aWQiOiIke0RTX1BST01FVEhFVVN9In0sImRlc2NyaXB0aW9uIjoiIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InBhbGV0dGUtY2xhc3NpYyJ9LCJjdXN0b20iOnsiYXhpc0xhYmVsIjoiIiwiYXhpc1BsYWNlbWVudCI6ImF1dG8iLCJiYXJBbGlnbm1lbnQiOjAsImRyYXdTdHlsZSI6ImxpbmUiLCJmaWxsT3BhY2l0eSI6MCwiZ3JhZGllbnRNb2RlIjoibm9uZSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwibGluZUludGVycG9sYXRpb24iOiJsaW5lYXIiLCJsaW5lV2lkdGgiOjEsInBvaW50U2l6ZSI6NSwic2NhbGVEaXN0cmlidXRpb24iOnsidHlwZSI6ImxpbmVhciJ9LCJzaG93UG9pbnRzIjoiYXV0byIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfX0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjgsInciOjEyLCJ4IjowLCJ5IjoxfSwiaWQiOjIsIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbXSwiZGlzcGxheU1vZGUiOiJsaXN0IiwicGxhY2VtZW50IjoiYm90dG9tIn0sInRvb2x0aXAiOnsibW9kZSI6InNpbmdsZSIsInNvcnQiOiJub25lIn19LCJ0YXJnZXRzIjpbeyJkYXRhc291cmNlIjp7InR5cGUiOiJwcm9tZXRoZXVzIiwidWlkIjoiJHtEU19QUk9NRVRIRVVTfSJ9LCJlZGl0b3JNb2RlIjoiY29kZSIsImV4ZW1wbGFyIjp0cnVlLCJleHByIjoic3VtKHJhdGUoaHR0cF9yZXF1ZXN0X3RvdGFse2VuZHBvaW50PX5cIiRlbmRwb2ludFwifVs1bV0pKSBieShzdGF0dXMpIiwiaW50ZXJ2YWwiOiIiLCJsZWdlbmRGb3JtYXQiOiJfX2F1dG8iLCJyYW5nZSI6dHJ1ZSwicmVmSWQiOiJBIn1dLCJ0aXRsZSI6IlJlcXVlc3RzIHBlciBzZWNvbmQiLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6eyJ0eXBlIjoicHJvbWV0aGV1cyIsInVpZCI6IiR7RFNfUFJPTUVUSEVVU30ifSwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InBhbGV0dGUtY2xhc3NpYyJ9LCJjdXN0b20iOnsiYXhpc0xhYmVsIjoiIiwiYXhpc1BsYWNlbWVudCI6ImF1dG8iLCJiYXJBbGlnbm1lbnQiOjAsImRyYXdTdHlsZSI6ImxpbmUiLCJmaWxsT3BhY2l0eSI6MCwiZ3JhZGllbnRNb2RlIjoibm9uZSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwibGluZUludGVycG9sYXRpb24iOiJsaW5lYXIiLCJsaW5lV2lkdGgiOjEsInBvaW50U2l6ZSI6NSwic2NhbGVEaXN0cmlidXRpb24iOnsidHlwZSI6ImxpbmVhciJ9LCJzaG93UG9pbnRzIjoiYXV0byIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfX0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjgsInciOjEyLCJ4IjoxMiwieSI6MX0sImlkIjo1OCwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOltdLCJkaXNwbGF5TW9kZSI6Imxpc3QiLCJwbGFjZW1lbnQiOiJib3R0b20ifSwidG9vbHRpcCI6eyJtb2RlIjoic2luZ2xlIiwic29ydCI6Im5vbmUifX0sInRhcmdldHMiOlt7ImRhdGFzb3VyY2UiOnsidHlwZSI6InByb21ldGhldXMiLCJ1aWQiOiIke0RTX1BST01FVEhFVVN9In0sImVkaXRvck1vZGUiOiJjb2RlIiwiZXhwciI6Imhpc3RvZ3JhbV9xdWFudGlsZSgwLjk1LHN1bShyYXRlKGh0dHBfcmVxdWVzdF9kdXJhdGlvbl9zZWNvbmRzX2J1Y2tldHtlbmRwb2ludD1+XCIkZW5kcG9pbnRcIn1bNW1dKSkgYnkobGUpKSIsImxlZ2VuZEZvcm1hdCI6Il9fYXV0byIsInJhbmdlIjp0cnVlLCJyZWZJZCI6IkEifV0sInRpdGxlIjoiTGF0ZW5jeSA5NXRoIHBlcmNlbnRpbGUgKHNlY3MpIiwidHlwZSI6InRpbWVzZXJpZXMifV0sInJlZnJlc2giOiIiLCJzY2hlbWFWZXJzaW9uIjozNSwic3R5bGUiOiJkYXJrIiwidGFncyI6W10sInRlbXBsYXRpbmciOnsibGlzdCI6W3siY3VycmVudCI6eyJzZWxlY3RlZCI6dHJ1ZSwidGV4dCI6IkFsbCIsInZhbHVlIjoiJF9fYWxsIn0sImRlZmluaXRpb24iOiJsYWJlbF92YWx1ZXMoaHR0cF9yZXF1ZXN0X3RvdGFsLCBlbmRwb2ludCkiLCJoaWRlIjowLCJpbmNsdWRlQWxsIjp0cnVlLCJsYWJlbCI6ImVuZHBvaW50IiwibXVsdGkiOmZhbHNlLCJuYW1lIjoiZW5kcG9pbnQiLCJvcHRpb25zIjpbXSwicXVlcnkiOnsicXVlcnkiOiJsYWJlbF92YWx1ZXMoaHR0cF9yZXF1ZXN0X3RvdGFsLCBlbmRwb2ludCkiLCJyZWZJZCI6IlN0YW5kYXJkVmFyaWFibGVRdWVyeSJ9LCJyZWZyZXNoIjoxLCJyZWdleCI6IiIsInNraXBVcmxTeW5jIjpmYWxzZSwic29ydCI6MSwidHlwZSI6InF1ZXJ5In0seyJjdXJyZW50Ijp7InNlbGVjdGVkIjpmYWxzZSwidGV4dCI6IlByb21ldGhldXMgIiwidmFsdWUiOiJQcm9tZXRoZXVzICJ9LCJoaWRlIjoyLCJpbmNsdWRlQWxsIjpmYWxzZSwibXVsdGkiOmZhbHNlLCJuYW1lIjoiRFNfUFJPTUVUSEVVUyIsIm9wdGlvbnMiOltdLCJxdWVyeSI6InByb21ldGhldXMiLCJyZWZyZXNoIjoxLCJyZWdleCI6IiIsInNraXBVcmxTeW5jIjpmYWxzZSwidHlwZSI6ImRhdGFzb3VyY2UifV19LCJ0aW1lIjp7ImZyb20iOiJub3ctM2giLCJ0byI6Im5vdyJ9LCJ0aW1lcGlja2VyIjp7fSwidGltZXpvbmUiOiIiLCJ0aXRsZSI6IkFQSSBEYXNoYm9hcmQiLCJ1aWQiOm51bGwsInZlcnNpb24iOjEsIndlZWtTdGFydCI6IiJ9fQ==
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fiddler-e2e-ingestion-aggregation-dashboard
  namespace: $namespace
  labels:
    app: grafana
data:
  fiddler-e2e-ingestion-aggregation-dashboard.json: |
    
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: $hostName-postgres-credentials
  namespace: $namespace
  labels:
    fiddler.ai/component: postgres
stringData:
  host: '$postgresHost'
  port: "5432"
  useSSL: "disable"
  user: '$postgresUser'
  password: '$postgresPassword'
  dbName: "postgres"
---
# Source: fiddler/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: $hostName-integrations-credentials
  namespace: $namespace
  labels:
    fiddler.ai/component: integrations
data:
  hf_api_token: "aGZfWmFUY1FXQmJCWU1ITU5lSkhka1FVSEd4Zmt4UEFvekpPag=="
  openai_api_key: ""
---
# Source: fiddler/templates/xai/priority-class-model-deployment.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: model-deployment-$namespace
  labels:
    name: model-deployment-$namespace
    app.kubernetes.io/name: model-deployment-$namespace
    fiddler.ai/component: model-serving
    app.kubernetes.io/part-of: xai
value: 1000000
globalDefault: false
description: "Use this PriorityClass only on model deployment pods"
---
# Source: fiddler/templates/xai/network-policy-model-deployment.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: xai-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-worker
spec:
  podSelector:
    matchLabels:
      app: model-deployment
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 169.254.0.0/16
              - 172.16.0.0/16
              - 192.168.0.0/16
---
# Source: fiddler/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fiddler
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler
  annotations:
---
# Source: fiddler/charts/clickhouse/charts/zookeeper/templates/configmap-zookeeper.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zookeeper-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-0.0.19
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: zookeeper
data:
  zoo.cfg: |-
    clientPort=2181
    tickTime=2000
    initLimit=300
    syncLimit=10
    maxClientCnxns=2000
    maxSessionTimeout=60000000
    dataDir=/var/lib/zookeeper/data
    dataLogDir=/var/lib/zookeeper/datalog
    autopurge.snapRetainCount=10
    autopurge.purgeInterval=1
    preAllocSize=131072
    snapCount=3000000
    leaderServes=yes
    standaloneEnabled=true
    4lw.commands.whitelist=stat, ruok, conf, isro, mntr
    metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider
    metricsProvider.httpPort=7000
    server.1=zookeeper-0.zookeeper-hl.default.svc.cluster.local:2888:3888
    server.2=zookeeper-1.zookeeper-hl.default.svc.cluster.local:2888:3888
    server.3=zookeeper-2.zookeeper-hl.default.svc.cluster.local:2888:3888

  log4j.properties: |-
    zookeeper.root.logger=CONSOLE
    zookeeper.console.threshold=INFO
    log4j.rootLogger=${zookeeper.root.logger}
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.Threshold=${zookeeper.console.threshold}
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
  java.env: |-
    JVMFLAGS="-Xms128M -Xmx1G -XX:+UseG1GC -XX:+CMSParallelRemarkEnabled"
---
# Source: fiddler/charts/clickhouse/templates/configmap-clickhouse.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-etc-clickhouse-server
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
data:
  config.xml: |
    <yandex>
        <logger>
          <level>information</level>
          <console>1</console>
        </logger>
        <macros>
            <replica from_env="REPLICA" />
            <shard from_env="SHARD" />
            <cluster>fiddler</cluster>
        </macros>
        <http_port>8123</http_port>
        <tcp_port>9000</tcp_port>
        <listen_host>::</listen_host>
        <listen_host>0.0.0.0</listen_host>
        <listen_try>1</listen_try>
        <postgresql_port>9005</postgresql_port>
        <interserver_http_port>9009</interserver_http_port>
        <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>
        <compiled_expression_cache_size>134217728</compiled_expression_cache_size>
        <default_session_timeout>60</default_session_timeout>
        <internal_replication>false</internal_replication>
        <keep_alive_timeout>30</keep_alive_timeout>
        <mark_cache_size>5368709120</mark_cache_size>
        <max_concurrent_queries>500</max_concurrent_queries>
        <max_connections>4096</max_connections>
        <max_memory_usage_to_ram_ratio>0.9</max_memory_usage_to_ram_ratio>
        <max_session_timeout>3600</max_session_timeout>
        <max_thread_pool_size>10000</max_thread_pool_size>
        <mmap_cache_size>1000</mmap_cache_size>
        <total_memory_profiler_step>4194304</total_memory_profiler_step>
        <uncompressed_cache_size>8589934592</uncompressed_cache_size>
        <path>/var/lib/clickhouse/</path>
        <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
    
        <user_directories>
            <users_xml>
                <path>users.xml</path>
            </users_xml>
            <local_directory>
                <path>/var/lib/clickhouse/access/</path>
            </local_directory>
        </user_directories>
    
        <default_profile>default</default_profile>
        <custom_settings_prefixes></custom_settings_prefixes>
        <default_database>default</default_database>
        <mlock_executable>true</mlock_executable>
        <remap_executable>false</remap_executable>
    
        <zookeeper>
            <node>
                <host>zookeeper-0.zookeeper-hl.default.svc.cluster.local</host>
                <port>2181</port>
            </node>
            <node>
                <host>zookeeper-1.zookeeper-hl.default.svc.cluster.local</host>
                <port>2181</port>
            </node>
            <node>
                <host>zookeeper-2.zookeeper-hl.default.svc.cluster.local</host>
                <port>2181</port>
            </node>
        </zookeeper>
    
        <disable_internal_dns_cache>1</disable_internal_dns_cache>
    
        <query_log>
            <database>system</database>
            <table>query_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            <ttl>event_date + INTERVAL 3 DAY DELETE</ttl>
        </query_log>
    
        <trace_log>
            <database>system</database>
            <table>trace_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </trace_log>
    
        <query_thread_log>
            <database>system</database>
            <table>query_thread_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            <ttl>event_date + INTERVAL 3 DAY DELETE</ttl>
        </query_thread_log>
    
        <metric_log>
            <database>system</database>
            <table>metric_log</table>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            <collect_interval_milliseconds>1000</collect_interval_milliseconds>
        </metric_log>
    
        <asynchronous_metric_log>
            <database>system</database>
            <table>asynchronous_metric_log</table>
            <flush_interval_milliseconds>7000</flush_interval_milliseconds>
        </asynchronous_metric_log>
    
        <opentelemetry_span_log>
            <engine>
                engine MergeTree
                partition by toYYYYMM(finish_date)
                order by (finish_date, finish_time_us, trace_id)
            </engine>
            <database>system</database>
            <table>opentelemetry_span_log</table>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </opentelemetry_span_log>
    
        <crash_log>
            <database>system</database>
            <table>crash_log</table>
            <partition_by />
            <flush_interval_milliseconds>1000</flush_interval_milliseconds>
        </crash_log>
    
        <top_level_domains_lists></top_level_domains_lists>
        <dictionaries_config>*_dictionary.xml</dictionaries_config>
    
        <distributed_ddl>
            <path>/clickhouse/task_queue/ddl</path>
        </distributed_ddl>
    
        <format_schema_path>/var/lib/clickhouse/format_schemas/</format_schema_path>
    
        <query_masking_rules>
            <rule>
                <name>hide encrypt/decrypt arguments</name>
                <regexp>((?:aes_)?(?:encrypt|decrypt)(?:_mysql)?)\s*\(\s*(?:'(?:\\'|.)+'|.*?)\s*\)</regexp>
                <!-- or more secure, but also more invasive:
                    (aes_\w+)\s*\(.*\)
                -->
                <replace>\1(???)</replace>
            </rule>
        </query_masking_rules>
    
        <send_crash_reports>
            <enabled>false</enabled>
        </send_crash_reports>
    
        <prometheus>
            <endpoint>/metrics</endpoint>
            <port>8001</port>
            <metrics>true</metrics>
            <events>true</events>
            <asynchronous_metrics>true</asynchronous_metrics>
        </prometheus>
    
    </yandex>
---
# Source: fiddler/charts/clickhouse/templates/configmap-clickhouse.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-etc-clickhouse-server-config-d
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
data:
  remote_servers.xml: |-
    <yandex>
      <remote_servers>
        <fiddler>
          <shard>
              <replica>
                  <host>clickhouse-shard0-0.clickhouse-hl.default.svc.cluster.local</host>
                  <port>9000</port>
                  <user>fiddler</user>
                  <password>fiddler</password>
              </replica>
          </shard>
          <shard>
              <replica>
                  <host>clickhouse-shard1-0.clickhouse-hl.default.svc.cluster.local</host>
                  <port>9000</port>
                  <user>fiddler</user>
                  <password>fiddler</password>
              </replica>
          </shard>
        </fiddler>
      </remote_servers>
    </yandex>
---
# Source: fiddler/charts/clickhouse/templates/configmap-clickhouse.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-scripts
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
data:
  setup.sh: |-
    #!/bin/bash

    /entrypoint.sh
---
# Source: fiddler/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: $namespace
  labels:
    helm.sh/chart: grafana-6.57.3
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/version: "24.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = false
    [database]
    host = $__file{/etc/secrets/grafana_db_credentials/host}
    name = grafana
    password = $__file{/etc/secrets/grafana_db_credentials/password}
    ssl_mode = disable
    type = postgres
    user = $__file{/etc/secrets/grafana_db_credentials/user}
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
    root_url = https://localhost/grafana
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://prometheus-server
    - access: proxy
      isDefault: false
      name: Loki
      type: loki
      url: http://loki:3100
---
# Source: fiddler/charts/prometheus/templates/server/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus
    release: fiddler
    chart: prometheus-15.9.0
    heritage: Helm
  name: prometheus-server
  namespace: $namespace
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - dns_sd_configs:
      - names:
        - _http._tcp.fiddler-api-telemetry
        - _telemetry._tcp.fiddler-api-telemetry
      job_name: fiddler-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.fiddler-worker-telemetry
        - _telemetry._tcp.fiddler-worker-telemetry
      job_name: fiddler-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.fiddler-scheduler-telemetry
        - _telemetry._tcp.fiddler-scheduler-telemetry
      job_name: fiddler-scheduler
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.admin-service-telemetry
        - _telemetry._tcp.admin-service-telemetry
      job_name: admin-service
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.aggregator-telemetry
        - _telemetry._tcp.aggregator-telemetry
      job_name: aggregator
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.aggregation-consolidator-telemetry
        - _telemetry._tcp.aggregation-consolidator-telemetry
      job_name: aggregation-consolidator
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.aggregation-worker-telemetry
        - _telemetry._tcp.aggregation-worker-telemetry
      job_name: aggregation-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.alerts-api-telemetry
        - _telemetry._tcp.alerts-api-telemetry
      job_name: alerts-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.alerts-worker-telemetry
        - _telemetry._tcp.alerts-worker-telemetry
      job_name: alerts-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.alerts-scheduler-telemetry
        - _telemetry._tcp.alerts-scheduler-telemetry
      job_name: alerts-scheduler
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.alerts-monitorbatch-telemetry
        - _telemetry._tcp.alerts-monitorbatch-telemetry
      job_name: alerts-monitorbatch
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.alerts-monitorrealtime-telemetry
        - _telemetry._tcp.alerts-monitorrealtime-telemetry
      job_name: alerts-monitorrealtime
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.authz-service-telemetry
        - _telemetry._tcp.authz-service-telemetry
      job_name: authz-service
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.compacter-telemetry
        - _telemetry._tcp.compacter-telemetry
      job_name: compacter
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.data-service-telemetry
        - _telemetry._tcp.data-service-telemetry
      job_name: data-service
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.data-monitoring-service-telemetry
        - _telemetry._tcp.data-monitoring-service-telemetry
      job_name: data-monitoring-service
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.envoy-telemetry
        - _telemetry._tcp.envoy-telemetry
      job_name: envoy
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.events-telemetry
        - _telemetry._tcp.events-telemetry
      job_name: events
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.executor-telemetry
        - _telemetry._tcp.executor-telemetry
      job_name: executor
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.ingestion-api-telemetry
        - _telemetry._tcp.ingestion-api-telemetry
        - _metrics-consolidator._tcp.ingestion-api-telemetry
      job_name: ingestion-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.ingestion-worker-telemetry
        - _telemetry._tcp.ingestion-worker-telemetry
      job_name: ingestion-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.inferencesever-telemetry
        - _telemetry._tcp.inferenceserver-telemetry
      job_name: inferenceserver
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.ingestion-consolidator-telemetry
        - _telemetry._tcp.ingestion-consolidator-telemetry
      job_name: ingestion-consolidator
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.metadata-api-telemetry
        - _telemetry._tcp.metadata-api-telemetry
      job_name: metadata-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.metadata-worker-telemetry
        - _telemetry._tcp.metadata-worker-telemetry
      job_name: metadata-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.xai-api-telemetry
        - _telemetry._tcp.xai-api-telemetry
      job_name: xai-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.xai-worker-telemetry
        - _telemetry._tcp.xai-worker-telemetry
      job_name: xai-worker
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.metadata-scheduler-telemetry
        - _telemetry._tcp.metadata-scheduler-telemetry
      job_name: metadata-scheduler
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.minio-telemetry
        - _telemetry._tcp.minio-telemetry
      job_name: minio
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.monitoring-service-telemetry
        - _telemetry._tcp.monitoring-service-telemetry
      job_name: monitoring-service
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.monitoring-api-telemetry
        - _telemetry._tcp.monitoring-api-telemetry
      job_name: monitoring-api
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _http._tcp.cache-warmer-telemetry
        - _telemetry._tcp.cache-warmer-telemetry
      job_name: cache-warmer
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _telemetry._tcp.postgres-telemetry
      job_name: postgres
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.rabbitmq-telemetry
        - _telemetry._tcp.rabbitmq-telemetry
      job_name: rabbitmq
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _telemetry._tcp.redis-telemetry
      job_name: redis
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.sketcher-telemetry
        - _telemetry._tcp.sketcher-telemetry
      job_name: sketcher
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _telemetry._tcp.clickhouse-telemetry
      job_name: clickhouse
      metrics_path: /metrics
      scrape_interval: 5s
    - dns_sd_configs:
      - names:
        - _metrics._tcp.zookeeper-telemetry
        - _telemetry._tcp.zookeeper-telemetry
      job_name: zookeeper
      metrics_path: /metrics
      scrape_interval: 5s
  recording_rules.yml: |
    {}
  rules: |
    {}
---
# Source: fiddler/charts/redis/templates/configmap-redis.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
---
# Source: fiddler/templates/admin/configmap-admin.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
data:
  URL: $hostName.$domain
  PORT: "4100"
  NODE_ENV: "customer"
  ORG: $hostName
  CONFIG_FILE_PATH: "/var/lib/fiddler/config/config.json"
  USER_CONFIG_DIR_PATH: "/var/lib/fiddler/user-config"
---
# Source: fiddler/templates/admin/configmap-admin.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-user-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
data:
  admin-user: admin@fiddler.ai
  admin-password: xai/4u
---
# Source: fiddler/templates/admin/configmap-admin.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-scripts
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
data:
  configure.sh: |-
    #!/bin/bash
    echo "Starting configurator"
    config_md5=nada
    while true; do
      # If this version of the admin application does not have a
      # configuration routine, there is nothing to do.
      [[ ! -f /app/deploy/configure.sh ]] && echo "No configuration routine; sleeping" && ( tail -f /dev/null || continue )

      # Nothing to do if the config file hasn't changed.
      current_md5=($(md5sum ${CONFIG_FILE_PATH}))
      [[ "${config_md5}" == "${current_md5}" ]] && sleep 30 && continue

      # Wait until the last moment to read, as they may have changed.
      export SUPER_ADMIN_USER=$(cat ${USER_CONFIG_DIR_PATH}/admin-user)
      export SUPER_ADMIN_PASSWORD=$(cat ${USER_CONFIG_DIR_PATH}/admin-password)
      export ADMIN_HOST="127.0.0.1"
      export ADMIN_PORT=4100
      [[ -z "${SUPER_ADMIN_USER}" || -z "${SUPER_ADMIN_PASSWORD}" ]] && echo "Missing admin username and/or password" && exit 1

      /app/deploy/configure.sh
      config_md5=($(md5sum ${CONFIG_FILE_PATH}))
    done
---
# Source: fiddler/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler
  annotations:
data:
  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level error
        Parsers_File parsers.conf
        Tag          logs.*
        HTTP_Server  Off
    [INPUT]
        Name tail
        Path /var/log/*.log
        Mem_Buf_Limit 10MB
    [FILTER]
        Name record_modifier
        Match *
        Record hostname ${HOSTNAME}
        Record app ${FIDDLER_APP}
    [OUTPUT]
        Name loki
        Match *
        Host loki
        Port 3100
        tls off
        labels job=fluentbit
        label_keys $hostname,$app
        auto_kubernetes_labels false
  custom_parsers.conf: |
---
# Source: fiddler/templates/envoy/configmap-envoy.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: envoy
data:
  envoy.yaml: |-    
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 9902
        filter_chains:
        - filters:
          - name: "envoy.http_connection_manager"
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_metrics
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/metrics"
                    route:
                      cluster: envoy_admin
                      prefix_rewrite: "/stats/prometheus"
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
              stat_prefix: ingress_http
              common_http_protocol_options:
                idle_timeout: 10800s
              http2_protocol_options:
                max_concurrent_streams: 10000 # Eliminate possibility of a bottleneck here.
                initial_stream_window_size: 65536 # 64 KiB
                initial_connection_window_size: 1048576 # 1 MiB
              stream_idle_timeout: 3600s
              request_timeout: 3600s
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains:
                  - "*"
                  typed_per_filter_config:
                    envoy.filters.http.ext_authz:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                      check_settings:
                        context_extensions:
                          virtual_host: local_service
                  # Envoy handles the concept of "prefix" a bit differently than
                  # Kubernetes Ingress; whereas Ingress interprets prefix in terms
                  # of whether the parts of a requested path begin with the parts
                  # specified in the prefix, Envoy simply performs a substring
                  # match. To achieve prefix behavior similar to Ingress, therefore,
                  # a "prefix" rule requires two match rules: (1) an exact match on
                  # the path, and (2) a substring prefix match on the path
                  # post-fixed with a forward-slash to demarcate the end of the path
                  # part.
                  routes:            
                    - match:
                        prefix: "/authorize/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/authorize"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/authorize_admin/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/authorize_admin"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/authorize_write/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/authorize_write"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/authorized_projects/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/authorized_projects"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/teams/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/teams"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/roles/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/roles"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/apply_team_role/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/apply_team_role"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/apply_project_role/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/apply_project_role"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/delete_user_roles/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/delete_user_roles"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/delete_team_roles/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/delete_team_roles"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/delete_project_role/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/delete_project_role"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/delete_project_roles/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/delete_project_roles"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/create_team/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/create_team"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        prefix: "/delete_team/"
                      route:
                        timeout: 3600s
                        cluster: authz
                    - match:
                        path: "/delete_team"
                      route:
                        timeout: 3600s
                        cluster: authz            
                    - match:
                        prefix: "/dataset_predictions/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_predictions"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_schema_list/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_schema_list"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_sql_query/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_sql_query"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/production_sql_query/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/production_sql_query"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_models_for_project/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_models_for_project"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/deploy_schema/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/deploy_schema"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/deploy_org/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/deploy_org"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/import_dataset/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/import_dataset"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/traffic_summary/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/traffic_summary"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/data_sample/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/data_sample"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_schema/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_schema"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_upload/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_upload"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_cloud_upload/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_cloud_upload"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_yaml_update/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_yaml_update"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_query/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_query"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_query_by_row_ids/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_query_by_row_ids"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/production_query_by_row_ids/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/production_query_by_row_ids"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_delete/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_delete"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_possibile_values/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_possibile_values"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_active_models/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_active_models"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_dormant_models/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_dormant_models"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/model_info/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/model_info"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/model_stub_gen/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/model_stub_gen"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/external_model_upload/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/external_model_upload"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/list_datasets/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/list_datasets"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/new_project/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/new_project"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/list_projects/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/list_projects"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/list_models/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/list_models"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/delete_project/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/delete_project"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/delete_model/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/delete_model"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/model_cloud_upload/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/model_cloud_upload"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/model_yaml_gen/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/model_yaml_gen"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/import_model_predictions/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/import_model_predictions"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/model_predictions_exist/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/model_predictions_exist"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/parse_slice_query/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/parse_slice_query"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/slice_query/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/slice_query"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/add_database_connector/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/add_database_connector"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_database_connector/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_database_connector"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/remove_database_connector/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/remove_database_connector"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_connector_upload/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_connector_upload"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/dataset_mutual_information/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/dataset_mutual_information"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/load_blob/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/load_blob"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/save_blob/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/save_blob"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_supported_features/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_supported_features"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/get_model/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/get_model"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        prefix: "/precompute/"
                      route:
                        timeout: 3600s
                        cluster: data
                    - match:
                        path: "/precompute"
                      route:
                        timeout: 3600s
                        cluster: data            
                    - match:
                        prefix: "/v2/triggered-alerts/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/triggered-alerts"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/alerts/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/alerts"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/alert-configs/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/alert-configs"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/alert-config-stats/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/alert-config-stats"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/triggered-alerts/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/triggered-alerts"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/alerts/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/alerts"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/alert-rules/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/alert-rules"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/alert-rule-stats/"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/alert-rule-stats"
                      route:
                        timeout: 3600s
                        cluster: alerts      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/v2/datasets/"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/datasets"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/events/"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/events"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/files/"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/files"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/events/"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/events"
                      route:
                        timeout: 3600s
                        cluster: ingestion      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/fairness/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/fairness"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/precache_globals/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/precache_globals"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/model_upload/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/model_upload"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/update_model/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/update_model"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/trigger_pre_computation/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/trigger_pre_computation"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/register_model/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/register_model"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/feature_importance/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/feature_importance"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/explain_slice/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/explain_slice"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/explain_by_row_id/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/explain_by_row_id"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/explain/"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        path: "/explain"
                      route:
                        timeout: 3600s
                        cluster: metadata
                    - match:
                        prefix: "/v2/webhooks/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/webhooks"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/list-projects/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/list-projects"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/version-compatibility/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/version-compatibility"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/server-info/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/server-info"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/bookmarks/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/bookmarks"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/charts/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/charts"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/charts/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/charts"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/dashboards/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/dashboards"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/jobs/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/jobs"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/projects/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/projects"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/organizations/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/organizations"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/invitations/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/invitations"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/project-roles/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/project-roles"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/teams/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/teams"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/users/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/users"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/freetrial/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/freetrial"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/version-compatibility/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/version-compatibility"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/server-info/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/server-info"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/projects/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/projects"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/jobs/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/jobs"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/teams/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/teams"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/team-roles/"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/team-roles"
                      route:
                        timeout: 3600s
                        cluster: metadata      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/v3/model-factory/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/model-factory"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/models/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/models"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/model-deployments/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/model-deployments"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/model-artifacts/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/model-artifacts"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/model-surrogate/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/model-surrogate"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/surrogate-model/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/surrogate-model"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/models/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/models"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/environments/"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/environments"
                      route:
                        timeout: 3600s
                        cluster: model      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/v2/explain/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/explain"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/fairness/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/fairness"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/feature-importance/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/feature-importance"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/feature-impact/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/feature-impact"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/scores/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/scores"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/slice-query/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/slice-query"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/dependence-plots/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/dependence-plots"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/feature-correlation/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/feature-correlation"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/feature-distribution/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/feature-distribution"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/predict/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/predict"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/mutual-information/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/mutual-information"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/slice-stats/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/slice-stats"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/explain/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/explain"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/fairness/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/fairness"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/feature-importance/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/feature-importance"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/feature-impact/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/feature-impact"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/scores/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/scores"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/slice-query/fetch/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/slice-query/fetch"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/slice-query/parse/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/slice-query/parse"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/slice-query/download/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/slice-query/download"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/correlation/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/correlation"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/distribution/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/distribution"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/dependence-plot/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/dependence-plot"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/mutual-info/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/mutual-info"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/slice-stats/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/slice-stats"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/predict/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/predict"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/precompute-feature-impact/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/precompute-feature-impact"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/precompute-feature-importance/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/precompute-feature-importance"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/feature-impact/precomputed/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/feature-impact/precomputed"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/feature-importance/precomputed/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/feature-importance/precomputed"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/analytics/precompute-predictions/"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/analytics/precompute-predictions"
                      route:
                        timeout: 3600s
                        cluster: xai      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/v2/monitoring-summary/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/monitoring-summary"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/monitoring-summary/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/monitoring-summary"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/latest_aggregation_ts_multi/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/latest_aggregation_ts_multi"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/aggregated_metrics_multi/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/aggregated_metrics_multi"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/init_monitoring/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/init_monitoring"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/aggregated_metrics/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/aggregated_metrics"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/latest_aggregation_ts/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/latest_aggregation_ts"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/dataset_histogram/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/dataset_histogram"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/drift_distribution/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/drift_distribution"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/monitoring_info/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/monitoring_info"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/flush_aggregation_timeseries/"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        path: "/flush_aggregation_timeseries"
                      route:
                        timeout: 3600s
                        cluster: monitoring
                    - match:
                        prefix: "/v2/baselines/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/baselines"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/queries/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/queries"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/queries/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/queries"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/describe-columns/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/describe-columns"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/metrics/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/metrics"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/histograms/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/histograms"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/histograms/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/histograms"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/custom-metrics/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/custom-metrics"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/segments/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/segments"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v2/dimensionality-reduction/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v2/dimensionality-reduction"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/dimensionality-reduction/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/dimensionality-reduction"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/baselines/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/baselines"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/custom-metrics/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/custom-metrics"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        prefix: "/v3/segments/"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/v3/segments"
                      route:
                        timeout: 3600s
                        cluster: monitoring      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/triggered_alerts/"
                      route:
                        timeout: 3600s
                        cluster: monitoringLegacy
                    - match:
                        path: "/triggered_alerts"
                      route:
                        timeout: 3600s
                        cluster: monitoringLegacy            
                    - match:
                        prefix: "/grafana/"
                      route:
                        timeout: 3600s
                        cluster: grafana
                        prefix_rewrite: "/"      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/grafana"
                      route:
                        timeout: 3600s
                        cluster: grafana      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/api/"
                      route:
                        timeout: 3600s
                        cluster: admin      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/api"
                      route:
                        timeout: 3600s
                        cluster: admin      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true            
                    - match:
                        prefix: "/"
                      route:
                        timeout: 3600s
                        cluster: webapp      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
                    - match:
                        path: "/"
                      route:
                        timeout: 3600s
                        cluster: webapp      
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          disabled: true
              http_filters:
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  http_service:
                    path_prefix: "/authorize?url="
                    server_uri:
                      uri: 'authz.$namespace'
                      cluster: authz
                      timeout: 15s
                    authorization_request:
                      headers_to_add:
                        - key: x-envoy-original-url
                          value: 'http://authz.$namespace.svc.cluster.local:10100'
                      allowed_headers:
                          patterns:
                            - prefix: "x-"
                    authorization_response:
                      allowed_upstream_headers:
                          patterns:
                            - prefix: "x-"
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    
      clusters:
        - name: authz
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: authz
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: authz
                      port_value: 10100
        - name: data
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: data
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: data
                      port_value: 6100
        - name: alerts
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: alerts
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: alerts-api
                      port_value: 6100
        - name: ingestion
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: ingestion
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ingestion-api
                      port_value: 6100
        - name: metadata
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: metadata
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: metadata-api
                      port_value: 6100
        - name: model
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: model
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: model-api
                      port_value: 6100
        - name: xai
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: xai
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: xai-api
                      port_value: 6100
        - name: monitoring
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: monitoring
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: monitoring-api
                      port_value: 6100
        - name: monitoringLegacy
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: monitoringLegacy
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: monitoring-api-legacy
                      port_value: 6100
        - name: grafana
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: grafana
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: grafana
                      port_value: 80
        - name: admin
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: admin
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: admin
                      port_value: 4100
        - name: webapp
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          connect_timeout: 15s
          per_connection_buffer_limit_bytes: 32768 # 32KiB
          load_assignment:
            cluster_name: webapp
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: webapp
                      port_value: 10080
    
        - name: envoy_admin
          connect_timeout: 0.25s
          type: static
          load_assignment:
            cluster_name: envoy_admin
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: "127.0.0.1"
                      port_value: 9901
---
# Source: fiddler/charts/prometheus/templates/server/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "server"
    app: prometheus
    release: fiddler
    chart: prometheus-15.9.0
    heritage: Helm
  name: prometheus-server
  namespace: $namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "32Gi"
---
# Source: fiddler/templates/rbac.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fiddler-minimal
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler
  annotations:
rules:
  - apiGroups: ["apps"]
    resources:
      - deployments
      - deployments/status
    verbs:
      - get
      - list
      - delete
      - create
      - update
      - patch
  - apiGroups: [""]
    resources:
      - services
    verbs:
      - get
      - list
      - delete
      - create
      - update
      - patch
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs:
      - get
      - list
      - delete
      - create
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
---
# Source: fiddler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fiddler-minimal
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler
  annotations:
subjects:
  - kind: ServiceAccount
    name: fiddler
    namespace: $namespace
roleRef:
  kind: Role
  name: fiddler-minimal
  apiGroup: rbac.authorization.k8s.io
---
# Source: fiddler/charts/clickhouse/charts/zookeeper/templates/service-zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-hl
  namespace: $namespace
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-0.0.19
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: server
      port: 2888
    - name: leader-election
      port: 3888
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: zookeeper
---
# Source: fiddler/charts/clickhouse/charts/zookeeper/templates/service-zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: $namespace
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-0.0.19
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: zookeeper
spec:
  ports:
    - name: client
      port: 2181
    - name: prometheus
      port: 7000
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: zookeeper
---
# Source: fiddler/charts/clickhouse/charts/zookeeper/templates/service-zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-0.0.19
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: zookeeper
spec:
  clusterIP: None
  ports:
    - port: 9100
      targetPort: telemetry
      name: telemetry
    - port: 7000
      targetPort: 7000
      name: prometheus
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: zookeeper
---
# Source: fiddler/charts/clickhouse/templates/service-clickhouse.yaml
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-hl
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - port: 8123
    name: http
  - port: 9000
    name: client
  - port: 9009
    name: interserver
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: clickhouse
---
# Source: fiddler/charts/clickhouse/templates/service-clickhouse.yaml
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
spec:
  type: ClusterIP
  ports:
  - port: 8123
    name: http
  - port: 9000
    name: client
  - port: 9009
    name: interserver
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: clickhouse
---
# Source: fiddler/charts/clickhouse/templates/service-clickhouse.yaml
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
spec:
  clusterIP: None
  ports:
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: clickhouse
---
# Source: fiddler/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: $namespace
  labels:
    helm.sh/chart: grafana-6.57.3
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/version: "24.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: fiddler
---
# Source: fiddler/charts/loki/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  namespace: $namespace
  labels:
    app: loki
    chart: loki-2.12.0
    release: fiddler
    heritage: Helm
    variant: headless
spec:
  clusterIP: None
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
    release: fiddler
---
# Source: fiddler/charts/loki/templates/service-memberlist.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-memberlist
  namespace: $namespace
  labels:
    app: loki
    chart: loki-2.12.0
    release: fiddler
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 7946
      targetPort: memberlist-port
      protocol: TCP
  selector:
    app: loki
    release: fiddler
---
# Source: fiddler/charts/loki/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: $namespace
  labels:
    app: loki
    chart: loki-2.12.0
    release: fiddler
    heritage: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
    release: fiddler
---
# Source: fiddler/charts/minio/templates/service-minio.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-hl
  namespace: $namespace
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.0.15
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: minio
spec:
  clusterIP: None
  ports:
    - port: 9000
      name: tcp
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: minio
---
# Source: fiddler/charts/minio/templates/service-minio.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: $namespace
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.0.15
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: minio
spec:
  ports:
    - port: 9000
      name: tcp
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: minio
---
# Source: fiddler/charts/minio/templates/service-minio.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.0.15
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: minio
spec:
  clusterIP: None
  ports:
    - port: 9000
      targetPort: http
      name: http
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: minio
---
# Source: fiddler/charts/prometheus/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus
    release: fiddler
    chart: prometheus-15.9.0
    heritage: Helm
  name: prometheus-server
  namespace: $namespace
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus
    release: fiddler
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: fiddler/charts/rabbitmq/templates/service-rabbitmq.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: $namespace
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-0.0.14
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: rabbitmq
spec:
  clusterIP: None
  ports:
   - name: http
     port: 15672
     targetPort: 15672
   - name: amqp
     port: 5672
     targetPort: 5672
  selector:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: rabbitmq
---
# Source: fiddler/charts/rabbitmq/templates/service-rabbitmq.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-0.0.14
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: rabbitmq
spec:
  clusterIP: None
  ports:
    - port: 15692
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: rabbitmq
---
# Source: fiddler/charts/redis/templates/service-redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-hl
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
spec:
  clusterIP: None
  ports:
   - name: tcp
     port: 6379
     targetPort: 6379
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: redis
---
# Source: fiddler/charts/redis/templates/service-redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
spec:
  ports:
   - name: tcp
     port: 6379
     targetPort: 6379
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: redis
---
# Source: fiddler/charts/redis/templates/service-redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
spec:
  clusterIP: None
  ports:
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: redis
---
# Source: fiddler/templates/admin/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
spec:
  ports:
    - port: 4100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: admin
---
# Source: fiddler/templates/admin/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: admin-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: admin
---
# Source: fiddler/templates/aggregator/service-aggregator-worker.yaml
apiVersion: v1
kind: Service
metadata:
  name: aggregator-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: aggregator-worker
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: aggregator-worker
---
# Source: fiddler/templates/aggregator/service-aggregator-worker.yaml
apiVersion: v1
kind: Service
metadata:
  name: aggregator-worker-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: aggregator-worker
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: aggregator-worker
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-api
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-worker
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-worker
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-api
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-worker-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-worker
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-worker
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-monitorbatch-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-monitorbatch
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-monitorbatch
---
# Source: fiddler/templates/alerts/service-alerts.yaml
apiVersion: v1
kind: Service
metadata:
  name: alerts-monitorrealtime-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-monitorrealtime
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: alerts-monitorrealtime
---
# Source: fiddler/templates/authz/service-authz.yaml
apiVersion: v1
kind: Service
metadata:
  name: authz
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: authz
spec:
  ports:
    - port: 10100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: authz
---
# Source: fiddler/templates/authz/service-authz.yaml
apiVersion: v1
kind: Service
metadata:
  name: authz-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: authz
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: authz
---
# Source: fiddler/templates/cache-warmer/service-cache-warmer.yaml
apiVersion: v1
kind: Service
metadata:
  name: cache-warmer
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: cache-warmer
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: cache-warmer
---
# Source: fiddler/templates/cache-warmer/service-cache-warmer.yaml
apiVersion: v1
kind: Service
metadata:
  name: cache-warmer-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: cache-warmer
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: cache-warmer
---
# Source: fiddler/templates/data/service-data.yaml
apiVersion: v1
kind: Service
metadata:
  name: data
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: data
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: data
---
# Source: fiddler/templates/data/service-data.yaml
apiVersion: v1
kind: Service
metadata:
  name: data-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: data
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: data
---
# Source: fiddler/templates/envoy/service-envoy.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: envoy
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: envoy
  type: ClusterIP
---
# Source: fiddler/templates/envoy/service-envoy.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: envoy
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: envoy
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-api
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-worker
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-worker
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-consolidator
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-consolidator
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-consolidator
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
    - port: 6101
      targetPort: consolidator
      name: consolidator
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-api
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-worker-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-worker
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-worker
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingestion-consolidator-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-consolidator
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: ingestion-consolidator
---
# Source: fiddler/templates/ingestion/service-ingestion.yaml
apiVersion: v1
kind: Service
metadata:
  name: inferenceserver
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: inferenceserver
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: inferenceserver
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-api
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-worker
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-worker
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-scheduler
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-scheduler
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-scheduler
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-api
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-worker-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-worker
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-worker
---
# Source: fiddler/templates/metadata/service-metadata.yaml
apiVersion: v1
kind: Service
metadata:
  name: metadata-scheduler-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-scheduler
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: metadata-scheduler
---
# Source: fiddler/templates/model/service-model.yaml
apiVersion: v1
kind: Service
metadata:
  name: model-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: model-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: model-api
---
# Source: fiddler/templates/model/service-model.yaml
apiVersion: v1
kind: Service
metadata:
  name: model-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: model-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: model-api
---
# Source: fiddler/templates/monitoring/service-monitoring-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitoring-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: monitoring-api
---
# Source: fiddler/templates/monitoring/service-monitoring-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitoring-api-legacy
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api-legacy
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: monitoring-api-legacy
---
# Source: fiddler/templates/monitoring/service-monitoring-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitoring-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: monitoring-api
---
# Source: fiddler/templates/monitoring/service-monitoring-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitoring-api-legacy-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api-legacy
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: monitoring-api-legacy
---
# Source: fiddler/templates/sketcher/service-sketcher.yaml
apiVersion: v1
kind: Service
metadata:
  name: sketcher
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: sketcher
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: sketcher
---
# Source: fiddler/templates/sketcher/service-sketcher.yaml
apiVersion: v1
kind: Service
metadata:
  name: sketcher-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: sketcher
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: sketcher
---
# Source: fiddler/templates/webapp/service-webapp.yaml
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: webapp
spec:
  ports:
    - port: 10080
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: webapp
---
# Source: fiddler/templates/webapp/service-webapp.yaml
apiVersion: v1
kind: Service
metadata:
  name: webapp-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: webapp
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: webapp
---
# Source: fiddler/templates/xai/service-xai.yaml
apiVersion: v1
kind: Service
metadata:
  name: xai-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-api
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: xai-api
---
# Source: fiddler/templates/xai/service-xai.yaml
apiVersion: v1
kind: Service
metadata:
  name: xai-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-worker
spec:
  ports:
    - port: 6100
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: xai-worker
---
# Source: fiddler/templates/xai/service-xai.yaml
apiVersion: v1
kind: Service
metadata:
  name: xai-api-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-api
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: xai-api
---
# Source: fiddler/templates/xai/service-xai.yaml
apiVersion: v1
kind: Service
metadata:
  name: xai-worker-telemetry
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-worker
spec:
  clusterIP: None
  ports:
    - port: 6100
      targetPort: metrics
      name: metrics
    - port: 9100
      targetPort: telemetry
      name: telemetry
  selector:
    app.kubernetes.io/name: fiddler
    app.kubernetes.io/instance: fiddler
    fiddler.ai/component: xai-worker
---
# Source: fiddler/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: $namespace
  labels:
    helm.sh/chart: grafana-6.57.3
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/version: "24.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: fiddler
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: fiddler
      annotations:
        checksum/config: a934b15c116321aad1d1c8f707a271a05de0717c7c52b38d3439af4e27698557
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 119f5ace0758d146297b1d78843761cfac0ee948abbb2f3c209f762aeda59e16
        kubectl.kubernetes.io/default-container: grafana
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      initContainers:
        - command:
          - sh
          - -c
          - until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST}; do echo waiting for
            database; sleep 2; done; sleep 30;
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                key: host
                name: grafana-db-credentials
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: user
                name: grafana-db-credentials
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: grafana-db-credentials
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: db_name
                name: grafana-db-credentials
          image: $postgresImage
          name: check-db-ready
      enableServiceLinks: true
      containers:
        - name: grafana
          image: $grafanaImage
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
            - name: grafana-db-credentials
              mountPath: /etc/secrets/grafana_db_credentials
              readOnly: true
              subPath: 
            - name: custom-grafana-upload-dashboards
              mountPath: /var/lib/grafana/dashboards/upload_dashboards.sh
              readOnly: 
              subPath: upload_dashboards.sh
            - name: fiddler-service-overview-dashboard
              mountPath: /var/lib/grafana/dashboards/fiddler-service_overview-dashboard.json
              readOnly: 
              subPath: fiddler-service_overview-dashboard.json
            - name: fiddler-rabbitmq-overview-dashboard
              mountPath: /var/lib/grafana/dashboards/fiddler-rabbitmq-overview.json
              readOnly: 
              subPath: fiddler-rabbitmq-overview.json
            - name: fiddler-async-job-status-dashboard
              mountPath: /var/lib/grafana/dashboards/fiddler-async-job-status-dashboard.json
              readOnly: 
              subPath: fiddler-async-job-status-dashboard.json
            - name: fiddler-api-dashboard
              mountPath: /var/lib/grafana/dashboards/fiddler-api-dashboard.json
              readOnly: 
              subPath: fiddler-api-dashboard.json
            - name: fiddler-e2e-ingestion-aggregation-dashboard
              mountPath: /var/lib/grafana/dashboards/fiddler-e2e-ingestion-aggregation-dashboard.json
              readOnly: 
              subPath: fiddler-e2e-ingestion-aggregation-dashboard.json
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - sleep 30 && /var/lib/grafana/dashboards/upload_dashboards.sh
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: storage
          emptyDir: {}
        - name: grafana-db-credentials
          secret:
            secretName: grafana-db-credentials
            defaultMode: 288
        - name: custom-grafana-upload-dashboards
          secret:
            secretName: custom-grafana-upload-dashboards
            defaultMode: 511
        - name: fiddler-service-overview-dashboard
          secret:
            secretName: fiddler-service-overview-dashboard
            defaultMode: 511
        - name: fiddler-rabbitmq-overview-dashboard
          secret:
            secretName: fiddler-rabbitmq-overview-dashboard
            defaultMode: 511
        - name: fiddler-async-job-status-dashboard
          secret:
            secretName: fiddler-async-job-status-dashboard
            defaultMode: 511
        - name: fiddler-api-dashboard
          secret:
            secretName: fiddler-api-dashboard
            defaultMode: 511
        - name: fiddler-e2e-ingestion-aggregation-dashboard
          secret:
            secretName: fiddler-e2e-ingestion-aggregation-dashboard
            defaultMode: 511
---
# Source: fiddler/charts/prometheus/templates/server/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus
    release: fiddler
    chart: prometheus-15.9.0
    heritage: Helm
  name: prometheus-server
  namespace: $namespace
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus
      release: fiddler
  replicas: 1
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus
        release: fiddler
        chart: prometheus-15.9.0
        heritage: Helm
    spec:
      enableServiceLinks: true
      serviceAccountName: default
      containers:

        - name: prometheus-server
          image: $prometheusImage
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=14d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
---
# Source: fiddler/templates/admin/deployment-admin.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: admin
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: admin
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: admin
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c',
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      containers:
        - name: admin
          image: $adminServiceImage
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              yarn serve 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          envFrom:
          - configMapRef:
              name: admin-config
          env:            
            - name: SERVICE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: admin-service-credentials
                  key: admin-service-token
            - name: ADMIN_HOST
              value: "127.0.0.1"
            - name: ADMIN_PORT
              value: "4100"
            - name: SUPER_ADMIN_USER
              value: super-admin@fiddler.ai
            - name: SUPER_ADMIN_PASSWORD
              value: xai/4u            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: '$hostName.$domain'
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: repo
              mountPath: /app/repo
          ports:            
            - name: http
              containerPort: 4100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: repo
          emptyDir: {}
        - name: config
          configMap:
            name: admin-orgs-config
        - name: user-config
          configMap:
            name: admin-user-config
        - name: env-config
          configMap:
            name: admin-config
        - name: scripts
          configMap:
            name: admin-scripts
            defaultMode: 0755
---
# Source: fiddler/templates/aggregator/deployment-aggregator-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: aggregator-worker
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: aggregator-worker
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: aggregator-worker
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      terminationGracePeriodSeconds: 60
      containers:
        - name: aggregator-worker
          image: $dataServiceImage
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/clickhouse_aggregator2/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: aggregator_v2_worker
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: AGG_BATCH_SIZE
              value: "5000000"
            - name: AGG_CONCURRENCY
              value: "10"
            - name: AGG_MAX_RETRY
              value: "3"
            - name: AGG_MAX_TASKS
              value: "50000"
            - name: AGG_SLEEP_SEC
              value: "1"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/alerts/deployment-alerts-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: alerts-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: alerts-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: alerts-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/alerts/runit.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: service
            - name: SERVICE_PORT
              value: "6100"
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "2"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: ALERTS_CELERY_BEAT_SCHEDULE_TIME_IN_SECONDS
              value: "300"
            - name: ORG_NAME
              value: $hostName
            - name: MAX_LOOKBACK_MINS
              value: "5"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/alerts/deployment-alerts-batchmonitor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-monitorbatch
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitorbatch
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: alerts-monitorbatch
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: alerts-monitorbatch
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: alerts-monitorbatch
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/alerts/runit.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: monitorbatch
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "2"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: ALERTS_CELERY_BEAT_SCHEDULE_TIME_IN_SECONDS
              value: "300"
            - name: ORG_NAME
              value: $hostName
            - name: MAX_LOOKBACK_MINS
              value: "5"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/alerts/deployment-alerts-realtimemonitor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-monitorrealtime
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitorrealtime
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: alerts-monitorrealtime
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: alerts-monitorrealtime
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: alerts-monitorrealtime
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/alerts/runit.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: monitorrealtime
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "2"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: ALERTS_CELERY_BEAT_SCHEDULE_TIME_IN_SECONDS
              value: "300"
            - name: ORG_NAME
              value: $hostName
            - name: MAX_LOOKBACK_MINS
              value: "5"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/alerts/deployment-alerts-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: alerts-worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: alerts-worker
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: alerts-worker
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: alerts-worker
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/alerts/runit.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: workers
            - name: METRICS_PORT
              value: "6100"            
            - name: CELERY_WORKER_CONCURRENCY
              value: "2"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: ALERTS_CELERY_BEAT_SCHEDULE_TIME_IN_SECONDS
              value: "300"
            - name: ORG_NAME
              value: $hostName
            - name: MAX_LOOKBACK_MINS
              value: "5"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/authz/deployment-authz.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authz
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: authz
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: authz
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: authz
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      containers:
        - name: authz
          image: $dataServiceImage
          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler1/runit.sh 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 512Mi
            limits:
              cpu: 1
              memory: 512Mi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: SERVICE_NAME
              value: authz_service
            - name: SERVICE_PORT
              value: "10100"
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: repo
              mountPath: /app/efs/repo
          ports:            
            - name: http
              containerPort: 10100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: repo
          emptyDir: {}
---
# Source: fiddler/templates/cache-warmer/deployment-cache-warmer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-warmer
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: cache-warmer
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: cache-warmer
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: cache-warmer
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 30;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
        - name: check-redis-ready
          image: $redisImage
          command: ['sh', '-c',
            'response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
            until [ "$response" = "PONG" ];
            do
              echo waiting for redis to be ready;
              response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
              sleep 2;
            done;
            echo ${REDIS_WRITE_URL} is ready to accept connections; sleep 30;']
          env:            
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
      containers:
        - name: cache-warmer
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              python3 /app/fiddler2/services/cache_warmer/main.py 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 4Gi
            limits:
              cpu: 1
              memory: 4Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: cache_warmer
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/data/deployment-data.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: data
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: data
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: data
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      containers:
        - name: data-service
          image: $dataServiceImage
          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler1/runit.sh 2>&1 | tee -a /var/log/container.log 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: SERVICE_NAME
              value: data_service
            - name: SERVICE_PORT
              value: "6100"
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: repo
              mountPath: /app/efs/repo
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: repo
          emptyDir: {}
---
# Source: fiddler/templates/envoy/deployment-envoy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: envoy
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: envoy
  template:
    metadata:
      annotations:
        checksum/config: c294390b282fa9fbb5d8214df627b30cc32fadb3fca29a06ed571e42cf9822ea
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: envoy
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: envoy
          image: $envoyImage
          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /usr/bin/envoy --config-path /etc/envoy/envoy.yaml --log-level info 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 2
              memory: 2Gi
            limits:
              cpu: 2
              memory: 2Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            - mountPath: /etc/envoy
              name: config
              readOnly: true
          ports:            
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
            - name: metrics
              containerPort: 9902        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - configMap:
            name: envoy-config
          name: config
---
# Source: fiddler/templates/ingestion/deployment-ingestion-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: ingestion-worker
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: ingestion-worker
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      terminationGracePeriodSeconds: 60
      containers:
        - name: ingestion-worker
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/ingestion_service/runit.sh 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:                
                command:
                  - bash
                  - -c
                  - echo "SIGTERM celery task ...">/proc/1/fd/1 && ps -ef | grep celery| awk '{print $2}'| head -1|xargs kill -TERM
          env:
            - name: SERVICE_NAME
              value: validation_workers
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "1"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: INGESTION_FILE_CHUNK_SIZE
              value: "5e+06"
            - name: DISABLE_SEND_EVENTS_TO_RABBITMQ
              value: "true"
            - name: WRITE_CLICKHOUSE_DI_VIOLATION_COLUMNS
              value: "true"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/metadata/deployment-metadata-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: metadata-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: metadata-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: metadata-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/metadata_api/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10          
          readinessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:
            - name: SERVICE_NAME
              value: metadata_api
            - name: METADATA_API_PORT
              value: "6100"
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/metadata/deployment-metadata-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: metadata-worker
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: metadata-worker
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: metadata-worker
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/metadata_worker/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:                
                command:
                  - bash
                  - -c
                  - echo "SIGTERM celery task ...">/proc/1/fd/1 && ps -ef | grep celery| awk '{print $2}'| head -1|xargs kill -TERM
          env:
            - name: SERVICE_NAME
              value: metadata_worker
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/model/deployment-model-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: model-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: model-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: model-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: model-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/model_api/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 2Gi
            limits:
              cpu: 1
              memory: 2Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10          
          readinessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: SERVICE_NAME
              value: model_api
            - name: SERVICE_PORT
              value: "6100"
            - name: SCRATCH_DIR
              value: /app
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/monitoring/deployment-monitoring-api-legacy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-api-legacy
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api-legacy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: monitoring-api-legacy
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: monitoring-api-legacy
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      containers:
        - name: monitoring-api-legacy
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler1/runit.sh 2>&1 | tee -a /var/log/container.log 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: METRICS_PORT
              value: "6100"
            - name: SERVICE_NAME
              value: monitoring_service
            - name: SERVICE_PORT
              value: "6100"
            - name: SERVICE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: admin-service-credentials
                  key: admin-service-token
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: repo
              mountPath: /app/efs/repo
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: repo
          emptyDir: {}
---
# Source: fiddler/templates/monitoring/deployment-monitoring-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: monitoring-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: monitoring-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: monitoring-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done; sleep 60;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      containers:
        - name: monitoring-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              gunicorn --bind 0.0.0.0:6100 fiddler2.services.monitor.apiserver.src.app:app -k gevent --timeout 300 --log-level INFO 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 8Gi
            limits:
              cpu: 1
              memory: 8Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10          
          readinessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:
            - name: SERVICE_NAME
              value: monitoring_api
            - name: SERVICE_PORT
              value: "6100"
            - name: NUMBA_CACHE_DIR
              value: /tmp
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/sketcher/deployment-sketcher.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sketcher
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: sketcher
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: sketcher
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: sketcher
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: sketcher
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/monitoring_worker/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: sketcher
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/webapp/deployment-webapp.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: webapp
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: webapp
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: webapp
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: webapp
          image: $webappImage
          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              sh docker-entrypoint.sh; nginx -g "daemon off;" 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 0.5
              memory: 512Mi
            limits:
              cpu: 0.5
              memory: 512Mi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: SERVICE_NAME
              value: webapp
            - name: SERVICE_PORT
              value: "10080"
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            - name: nginx-error-log
              mountPath: /var/log/nginx
          ports:            
            - name: http
              containerPort: 10080        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: nginx-error-log
          emptyDir: {}
---
# Source: fiddler/templates/xai/deployment-xai-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xai-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: xai-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: xai-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: xai-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/xai_api/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 6Gi
            limits:
              cpu: 1
              memory: 6Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10          
          readinessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
            - name: SERVICE_NAME
              value: xai_api
            - name: SERVICE_PORT
              value: "6100"
            - name: METRICS_PORT
              value: "6100"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/xai/deployment-xai-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xai-worker
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: xai-worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: xai-worker
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: xai-worker
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: xai-worker
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              /app/fiddler2/services/xai_worker/run.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 4Gi
            limits:
              cpu: 1
              memory: 4Gi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: xai_worker
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/charts/clickhouse/charts/zookeeper/templates/statefulset-zookeeper.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: $namespace
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-0.0.19
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: zookeeper
spec:
  serviceName: zookeeper-hl
  replicas: 3
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: zookeeper
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: zookeeper
        helm.sh/chart: zookeeper-0.0.19
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: zookeeper
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000                  
      tolerations:
        - effect: NoSchedule
          key: app.fiddler.ai/component
          operator: Equal
          value: zookeeper
      affinity:
        podAffinity:
          
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "zookeeper"
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "zookeeper"
      containers:        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /var/lib/zookeeper
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: zookeeper
          imagePullPolicy: IfNotPresent
          image: $zookeeperImage          
          resources:
            requests:
              cpu: $zookeeperRequestsCPU
              memory: $zookeeperRequestsMemory
            limits:
              cpu: $zookeeperLimitsCPU
              memory: $zookeeperLimitsMemory
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
            - containerPort: 7000
              name: prometheus
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: CLIENT_PORT
              value: "2181"
            - name: SERVER_PORT
              value: "2888"
            - name: ELECTION_PORT
              value: "3888"
            - name: PROMETHEUS_PORT
              value: "7000"
            - name: ZOO_DATA_DIR
              value: /var/lib/zookeeper/data
            - name: ZOO_DATA_LOG_DIR
              value: /var/lib/zookeeper/datalog
            - name: ZOO_CONF_DIR
              value: /var/lib/zookeeper/conf
            - name: ZOO_LOG_DIR
              value: /var/lib/zookeeper/logs
          command:
            - bash
            - -x
            - -c
            - |
              mkdir -p $ZOO_DATA_DIR $ZOO_DATA_LOG_DIR
              mkdir -p
              mkdir -p $ZOO_CONF_DIR
              mkdir -p $ZOO_LOG_DIR
              cp /zk-conf/* $ZOO_CONF_DIR/
              SERVERS=3 &&
              HOST=`hostname -s` &&
              DOMAIN=`hostname -d` &&
              if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
                  NAME=${BASH_REMATCH[1]}
                  ORD=${BASH_REMATCH[2]}
              else
                  echo "Failed to parse name and ordinal of Pod"
                  exit 1
              fi &&
              export MY_ID=$((ORD+1)) &&
              echo $MY_ID > $ZOO_DATA_DIR/myid &&
              /usr/share/java/zookeeper/bin/zkServer.sh start-foreground $ZOO_CONF_DIR/zoo.cfg
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "OK=$(echo ruok | nc 127.0.0.1 2181); if [[ \"$OK\" == \"imok\" ]]; then exit 0; else exit 1; fi"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - "OK=$(echo ruok | nc 127.0.0.1 2181); if [[ \"$OK\" == \"imok\" ]]; then exit 0; else exit 1; fi"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            - name: data
              mountPath: /var/lib/zookeeper
            - name: zookeeper-config
              mountPath: /zk-conf
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
        - name: zookeeper-config
          configMap:
            name: zookeeper-config
        - name: runtime-config
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "64Gi"
---
# Source: fiddler/charts/clickhouse/templates/statefulset-clickhouse.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse-shard0
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
spec:
  serviceName: clickhouse-hl
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: clickhouse
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        checksum/config: b19744a529d604c2b10897f7f8dd8100a29dfae3edc1a99249fed0423fe6ef62
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: clickhouse
        helm.sh/chart: clickhouse-0.0.25
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: clickhouse
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101                  
      tolerations:
        - effect: NoSchedule
          key: fiddler.ai/component
          operator: Equal
          value: clickhouse
      affinity:
        podAffinity:
          
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "clickhouse"
                - "zookeeper"
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "clickhouse"
      containers:        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /var/lib/clickhouse
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: clickhouse
          imagePullPolicy: IfNotPresent
          image: $clickhouseImage          
          resources:
            requests:
              cpu: $clickhouseRequestsCPU
              memory: $clickhouseRequestsMemory
            limits:
              cpu: $clickhouseLimitsCPU
              memory: $clickhouseLimitsMemory
          command:
            - /scripts/setup.sh
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']            
            - name: CH_HOST
              value: "localhost"
            - name: CH_PORT
              value: "9000"
            - name: CH_ADMIN_USER
              value: "fiddler"
            - name: CH_ADMIN_PASS
              value: "fiddler"
            - name: CH_CLUSTER
              value: "fiddler"
            - name: CH_DEFAULT_DATABASE
              value: "default"
            - name: CH_DATABASE
              value: $hostName
            - name: CH_USER
              value: "fiddler_$hostName"
            - name: CH_PASSWD
              value: "JGhvc3ROYW1l"
            - name: SHARD
              value: "shard0"
            - name: REPLICA
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          readinessProbe:
            exec:
              # Try 5 times to access both native and http API entry points.
              # In case of failure sleep for i*10 sec and retry
              # This command can take long to to run, so adjust 'timeoutSeconds' accordingly
              command:
              - /bin/bash
              - -c
              - |
                for i in 1 2 3 4 5; do
                  echo "Attempt $i" && \
                    echo -n "version=" && \
                    clickhouse-client --password fiddler -q 'select version()' && \
                    HTTP=$(wget localhost:8123 -q --tries=1 --timeout=5 -O /dev/stdout) && \
                    echo "HTTP=$HTTP" && \
                    [ $HTTP == 'Ok.' ] && \
                    exit 0;
                  echo "Attempt $i FAILED with above output";
                  sleep $(($i * 10));
                done;
                exit 1
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 200
            failureThreshold: 3
          ports:
            - containerPort: 9000
              name: client
            - containerPort: 8123
              name: http
            - containerPort: 9009
              name: interserver
            - containerPort: 8001
              name: metrics
            - containerPort: 9005
              name: postgres
          volumeMounts:          
          - name: log
            mountPath: "/var/log"
          - name: etc-clickhouse-server-config-d
            mountPath: /etc/clickhouse-server/config.d
          - name: etc-clickhouse-server
            mountPath: /etc/clickhouse-server/config.xml
            subPath: config.xml
          - name: clickhouse-users
            mountPath: /etc/clickhouse-server/users.xml
            subPath: users.xml
          - name: scripts
            mountPath: /scripts/setup.sh
            subPath: setup.sh
          - name: data
            mountPath: /var/lib/clickhouse
          - name: custom-init-scripts
            mountPath: /docker-entrypoint-initdb.d
      volumes:      
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: log
        emptyDir: {}
      - name: etc-clickhouse-server-config-d
        configMap:
          name: clickhouse-etc-clickhouse-server-config-d
      - name: etc-clickhouse-server
        configMap:
          name: clickhouse-etc-clickhouse-server
      - name: clickhouse-users
        secret:
          secretName: clickhouse-users
      - name: scripts
        configMap:
          name: clickhouse-scripts
          defaultMode: 0755
      - name: custom-init-scripts
        secret:
          secretName: clickhouse-init-scripts
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "256Gi"
---
# Source: fiddler/charts/clickhouse/templates/statefulset-clickhouse.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse-shard1
  namespace: $namespace
  labels:
    app.kubernetes.io/name: clickhouse
    helm.sh/chart: clickhouse-0.0.25
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: clickhouse
spec:
  serviceName: clickhouse-hl
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: clickhouse
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        checksum/config: b19744a529d604c2b10897f7f8dd8100a29dfae3edc1a99249fed0423fe6ef62
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: clickhouse
        helm.sh/chart: clickhouse-0.0.25
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: clickhouse
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101                  
      tolerations:
        - effect: NoSchedule
          key: fiddler.ai/component
          operator: Equal
          value: clickhouse
      affinity:
        podAffinity:
          
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "clickhouse"
                - "zookeeper"
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: fiddler.ai/component
                operator: In
                values:
                - "clickhouse"
      containers:        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /var/lib/clickhouse
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: clickhouse
          imagePullPolicy: IfNotPresent
          image: $clickhouseImage          
          resources:
            requests:
              cpu: $clickhouseRequestsCPU
              memory: $clickhouseRequestsMemory
            limits:
              cpu: $clickhouseLimitsCPU
              memory: $clickhouseLimitsMemory
          command:
            - /scripts/setup.sh
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']            
            - name: CH_HOST
              value: "localhost"
            - name: CH_PORT
              value: "9000"
            - name: CH_ADMIN_USER
              value: "fiddler"
            - name: CH_ADMIN_PASS
              value: "fiddler"
            - name: CH_CLUSTER
              value: "fiddler"
            - name: CH_DEFAULT_DATABASE
              value: "default"
            - name: CH_DATABASE
              value: $hostName
            - name: CH_USER
              value: fiddler_$hostName
            - name: CH_PASSWD
              value: "JGhvc3ROYW1l"
            - name: SHARD
              value: "shard1"
            - name: REPLICA
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          readinessProbe:
            exec:
              # Try 5 times to access both native and http API entry points.
              # In case of failure sleep for i*10 sec and retry
              # This command can take long to to run, so adjust 'timeoutSeconds' accordingly
              command:
              - /bin/bash
              - -c
              - |
                for i in 1 2 3 4 5; do
                  echo "Attempt $i" && \
                    echo -n "version=" && \
                    clickhouse-client --password fiddler -q 'select version()' && \
                    HTTP=$(wget localhost:8123 -q --tries=1 --timeout=5 -O /dev/stdout) && \
                    echo "HTTP=$HTTP" && \
                    [ $HTTP == 'Ok.' ] && \
                    exit 0;
                  echo "Attempt $i FAILED with above output";
                  sleep $(($i * 10));
                done;
                exit 1
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 200
            failureThreshold: 3
          ports:
            - containerPort: 9000
              name: client
            - containerPort: 8123
              name: http
            - containerPort: 9009
              name: interserver
            - containerPort: 8001
              name: metrics
            - containerPort: 9005
              name: postgres
          volumeMounts:          
          - name: log
            mountPath: "/var/log"
          - name: etc-clickhouse-server-config-d
            mountPath: /etc/clickhouse-server/config.d
          - name: etc-clickhouse-server
            mountPath: /etc/clickhouse-server/config.xml
            subPath: config.xml
          - name: clickhouse-users
            mountPath: /etc/clickhouse-server/users.xml
            subPath: users.xml
          - name: scripts
            mountPath: /scripts/setup.sh
            subPath: setup.sh
          - name: data
            mountPath: /var/lib/clickhouse
          - name: custom-init-scripts
            mountPath: /docker-entrypoint-initdb.d
      volumes:      
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: log
        emptyDir: {}
      - name: etc-clickhouse-server-config-d
        configMap:
          name: clickhouse-etc-clickhouse-server-config-d
      - name: etc-clickhouse-server
        configMap:
          name: clickhouse-etc-clickhouse-server
      - name: clickhouse-users
        secret:
          secretName: clickhouse-users
      - name: scripts
        configMap:
          name: clickhouse-scripts
          defaultMode: 0755
      - name: custom-init-scripts
        secret:
          secretName: clickhouse-init-scripts
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "256Gi"
---
# Source: fiddler/charts/loki/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: $namespace
  labels:
    app: loki
    chart: loki-2.12.0
    release: fiddler
    heritage: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki
      release: fiddler
  serviceName: loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki
        name: loki
        release: fiddler
      annotations:
        checksum/config: 379897eda5e979f1fe1b8882a32f99998f0a2116cd97ca08b5350535c3fcc3d0
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        []
      containers:
        - name: loki
          image: $lokiImage
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: "/data"
              subPath: 
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist-port
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            {}
          securityContext:
            readOnlyRootFilesystem: true
          env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      terminationGracePeriodSeconds: 4800
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          secret:
            secretName: loki
        - name: storage
          emptyDir: {}
---
# Source: fiddler/charts/minio/templates/statefulset-minio.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: $namespace
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.0.15
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: minio
spec:
  serviceName: minio
  replicas: 4
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: minio
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: minio
        helm.sh/chart: minio-0.0.15
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: minio
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435                  
      tolerations:
      initContainers:
        - name: bootstrap
          image: $minioImage
          command:
            - bash
            - -c
            - |
              rm -rf /data
              mkdir -p /data/fiddler
          volumeMounts:
            - name: data
              mountPath: /data
      containers:                
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /data
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: minio
          image: $minioImage
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /var/lib/fiddler/runtime/run"
                mkdir -p /var/lib/fiddler/runtime
                touch /var/lib/fiddler/runtime/run
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              minio server http://minio-0.minio.default/data http://minio-1.minio.default/data http://minio-2.minio.default/data http://minio-3.minio.default/data 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: $minioRequestsCPU
              memory: $minioRequestsMemory
            limits:
              cpu: $minioLimitsCPU
              memory: $minioLimitsMemory
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            - name: data
              mountPath: /data
          ports:
            - name: tcp
              containerPort: 9000
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "256Gi"
---
# Source: fiddler/charts/rabbitmq/templates/statefulset-rabbitmq.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: $namespace
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-0.0.14
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: rabbitmq
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-0.0.14
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: rabbitmq
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435                  
      tolerations:
      containers:        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /var/lib/rabbitmq/mnesia
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: rabbitmq
          image: $rabbitmqImage
          resources:
            requests:
              cpu: 2
              memory: 4Gi
            limits:
              cpu: 2
              memory: 4Gi
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /var/lib/fiddler/runtime/run"
                mkdir -p /var/lib/fiddler/runtime
                touch /var/lib/fiddler/runtime/run
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              docker-entrypoint.sh rabbitmq-server 2>&1 | tee -a /var/log/container.log
          ports:
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
            - name: metrics
              protocol: TCP
              containerPort: 15692
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: RABBITMQ_NODENAME
              value: rabbit@rabbitmq
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            # https://github.com/docker-library/rabbitmq/issues/171#issuecomment-316302131
            - name: data
              mountPath: /var/lib/rabbitmq/mnesia
              subPath: rabbitmq
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
# Source: fiddler/charts/redis/templates/statefulset-redis.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: $namespace
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.0.21
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: redis
spec:
  serviceName: redis
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: redis
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-0.0.21
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: redis
    spec:      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435                  
      tolerations:
      containers:        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          volumeMounts:
          - name: data
            mountPath: /var/lib/redis
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
        - name: redis
          image: $redisImage
          resources:
            requests:
              cpu: 4
              memory: 8Gi
            limits:
              cpu: 4
              memory: 8Gi
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /var/lib/fiddler/runtime/run"
                mkdir -p /var/lib/fiddler/runtime
                touch /var/lib/fiddler/runtime/run
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              redis-server /usr/local/etc/redis/redis.conf 2>&1 | tee -a /var/log/container.log          
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:            
            - name: log
              mountPath: "/var/log"
            - name: data
              mountPath: /var/lib/redis
      volumes:        
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "32Gi"
---
# Source: fiddler/templates/ingestion/statefulset-ingestion-api.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ingestion-api
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-api
spec:
  serviceName: ingestion-api
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: ingestion-api
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: ingestion-api
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      initContainers:
      containers:
        - name: ingestion-api
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              /app/fiddler2/services/ingestion_service/runit.sh 2>&1 | tee -a /var/log/container.log
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 2
              memory: 6Gi
          
          livenessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10          
          readinessProbe:
            httpGet:
              path: /health
              port: 6100
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          env:
            - name: SERVICE_NAME
              value: ingestion_service
            - name: EVENT_LOG_FILE_PATH
              value: /var/log/events
            - name: EVENT_FILE_ROTATION_INTERVAL_SECONDS
              value: "15"
            - name: EVENT_FILE_BACKUPS_COUNT
              value: "240"
            - name: GUNICORN_WORKERS_COUNT
              value: "2"
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "1"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: INGESTION_FILE_CHUNK_SIZE
              value: "5e+06"
            - name: DISABLE_SEND_EVENTS_TO_RABBITMQ
              value: "true"
            - name: WRITE_CLICKHOUSE_DI_VIOLATION_COLUMNS
              value: "true"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: eventlog
              mountPath: /var/log/events
          ports:            
            - name: http
              containerPort: 6100
        - name: ingestion-consolidator
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              /app/fiddler2/services/ingestion_service/runit.sh 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 100m
              memory: 512Mi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "1"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: INGESTION_FILE_CHUNK_SIZE
              value: "5e+06"
            - name: DISABLE_SEND_EVENTS_TO_RABBITMQ
              value: "true"
            - name: WRITE_CLICKHOUSE_DI_VIOLATION_COLUMNS
              value: "true"
            - name: SERVICE_NAME
              value: log_consolidator
            - name: EVENT_LOG_FILE_PATH
              value: /var/log/events
            - name: METRICS_PORT
              value: "6101"
            - name: EVENTS_LOG_CONSOLIDATOR_SLEEP_INTERVAL
              value: "30"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
            - name: eventlog
              mountPath: /var/log/events
          ports:            
            - name: http
              containerPort: 6101        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: eventlog
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: 2Gi
---
# Source: fiddler/templates/ingestion/statefulset-ingestion-consolidator.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ingestion-consolidator
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: ingestion-consolidator
spec:
  serviceName: ingestion-consolidator
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: ingestion-consolidator
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: ingestion-consolidator
    spec:
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435                  
      tolerations:
      initContainers:
      containers:
        - name: ingestion-consolidator
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /app
              /app/fiddler2/services/ingestion_service/runit.sh 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 100m
              memory: 512Mi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: SERVICE_NAME
              value: consolidator_beat
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain            
            - name: CELERY_WORKER_CONCURRENCY
              value: "1"
            - name: CELERY_BEAT_CONCURRENCY
              value: "1"
            - name: CELERY_BROKER_HEARTBEAT
              value: "0"
            - name: INGESTION_FILE_CHUNK_SIZE
              value: "5e+06"
            - name: DISABLE_SEND_EVENTS_TO_RABBITMQ
              value: "true"
            - name: WRITE_CLICKHOUSE_DI_VIOLATION_COLUMNS
              value: "true"
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/metadata/statefulset-metadata-scheduler.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: metadata-scheduler
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: metadata-scheduler
spec:
  serviceName: metadata-scheduler
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fiddler
      app.kubernetes.io/instance: fiddler
      fiddler.ai/component: metadata-scheduler
  podManagementPolicy: Parallel
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: metadata-scheduler
    spec:
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435                  
      tolerations:
      initContainers:
      containers:
        - name: metadata-scheduler
          image: $dataServiceImage          
          command:
            - bash
            - -c
            - |-
              if [[ -f /var/lib/fiddler/runtime/env ]]; then
                echo "Found /var/lib/fiddler/runtime/env; sourcing"
                source /var/lib/fiddler/runtime/env
              else
                echo "File not found: /var/lib/fiddler/runtime/env; proceeding anyway"
              fi
              if [[ ! -f /var/lib/fiddler/runtime/run ]]; then
                echo "Creating liveness sentinel at /tmp/fiddler"
                mkdir -p /tmp/fiddler
                touch /tmp/fiddler/healthy
              fi
              if [[ -f /tmp/fiddler/unavailable ]]; then
                echo "Unavailability sentinel found at /tmp/fiddler/unavailable; removing"
                rm /tmp/fiddler/unavailable
              fi
              cd /tmp
              celery --app=fiddler2.services.metadata_worker.app:celery_app beat --loglevel=INFO 2>&1 | tee -a /var/log/container.log          
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/fiddler/healthy
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 1
              memory: 512Mi
            limits:
              cpu: 1
              memory: 512Mi          
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - |-
                if [[ -f /tmp/fiddler/unavailable ]]; then
                  exit 1
                fi
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: METRICS_PORT
              value: "6100"            
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            - name: FLASK_ENV
              value: "production"
            - name: CELERY_ENV
              value: "production"
            - name: FIDDLER_ENV
              value: "customer"
            - name: FIDDLER_VERSION
              value: "24.4.1"
            - name: URL
              value: $hostName.$domain
            - name: AUTHZ_SERVICE_URL
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTHZ_ENDPOINT
              value: 'http://authz.$namespace.svc.cluster.local:10100'
            - name: AUTH_SERVICE_URI
              value: 'http://admin.$namespace:4100'
            - name: DATA_SERVICE_URL
              value: 'http://data.$namespace:6100'
            - name: CONTAINER_REGISTRY
              value: ""
            - name: K8S_SCHEDULER_NAME
              value: "default-scheduler"
            - name: MODEL_DEPLOYMENT_PRIORITY_CLASS_NAME
              value: 'model-deployment-$namespace'
            - name: MODEL_DEPLOYMENT_APP_BASE_URL
              value: ""
            - name: MODEL_DEPLOYMENT_EPHEMERAL_STORAGE_DEFAULT_REQUEST
              value: "20"
            - name: NLTK_DATA
              value: "/tmp"
            - name: ALLOW_MISSING_TARGET_CLASS_ORDER
              value: "false"
            - name: AUTHORIZATION_ENABLED
              value: "true"
            - name: CUSTOM_BINARY_THRESHOLD_ENABLED
              value: "true"
            - name: FAIRNESS_ENABLED
              value: "false"
            - name: USE_MIN_MAX_FAILSAFE
              value: "true"
            - name: PUBLISHING_SYNCHRONOUS
              value: "false"
            - name: DEV_CLUSTER
              value: "false"
            - name: AIRGAPPED_ON_PREM_ENV
              value: "false"
            - name: ENABLE_SCHEMA_CREATION
              value: "true"
            - name: USE_F1_ALERTS
              value: 
            - name: ENABLE_CHUNKING
              value: 
            - name: ENABLE_MODEL_DEPLOYMENTS
              value: "true"
            - name: ENABLE_CHARTS_UI
              value: "true"
            - name: ENABLE_DASHBOARDS_UI
              value: "true"
            - name: ENABLE_RCA_UI
              value: "true"
            - name: ENABLE_BASELINE_UI
              value: "true"
            - name: ENABLE_ALERT_CONTEXT_UI
              value: "true"
            - name: ENABLE_MULTI_METRIC_QUERIES_UI
              value: "true"
            - name: ENABLE_RCA_PERFORMANCE_TAB_UI
              value: "false"
            - name: ENABLE_UNITY_ANALYZE_CHARTS_UI
              value: "false"
            - name: IS_FREETRIAL
              value: "false"
            - name: EMIT_APPLICATION_USAGE_METRICS
              value: "false"
            - name: ENABLE_CH_AGG_V2
              value: "true"
            - name: ENABLE_MODEL_METRICS_API
              value: "true"
            - name: ENABLE_FIDDLER_V2
              value: "true"
            - name: ENABLE_ALERTS_MONITOR_PROCESS
              value: 
            - name: ENABLE_ALERTS_VERSION
              value: "true"
            - name: ENABLE_INGEST_FILE_EVENTS_PROCESSING
              value: "true"
            - name: ENABLE_UNITY_PROJECTS_UI
              value: "true"
            - name: ENABLE_INFERENCE_SERVER
              value: "false"
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_host"
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_port"
            - name: RABBITMQ_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_http_port"
                  optional: true
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_password"
            - name: RABBITMQ_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: "broker_useSSL"
            - name: RABBITMQ_QOS
              value: "1"
            - name: ASYNC_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: ASYNC_REDIS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: ASYNC_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "port"
                  optional: true
            - name: ASYNC_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: ASYNC_REDIS_KEY_PREFIX
              value: $hostName
            - name: INGESTION_REDIS_KEY_PREFIX
              value: $hostName
            - name: ASYNC_REDIS_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: ASYNC_REDIS_DATABASE
              value: "2"
            - name: CELERY_RESULT_BACKEND_URL
              value: $(ASYNC_REDIS_SCHEME)://$(ASYNC_REDIS_ENDPOINT)/$(ASYNC_REDIS_DATABASE)
            - name: CELERY_BROKER_URL
              value: pyamqp://$(RABBITMQ_HOST)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "hf_api_token"
            - name: HF_HOME
              value: "/tmp/hf"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: $hostName-integrations-credentials
                  key: "openai_api_key"
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
            - name: APP_DEPLOYMENT_NAME
              value: $hostName
            - name: MODEL_DEPLOYMENT_MAX_MEMORY_REQUEST
              value: "16384"
            - name: MODEL_SERVE_CHUNK_SIZE
              value: "10000"
            - name: ADMIN_EMAIL
              value: info@$domain
            - name: NO_REPLY_EMAIL
              value: info@$domain
            - name: ALERTS_EMAIL
              value: alerts@$domain
          volumeMounts:                        
            - name: log
              mountPath: "/var/log"
          ports:            
            - name: http
              containerPort: 6100        
        - name: prometheus-sidecar
          image: $prometheusNodeExporterImage
          imagePullPolicy: Always
          ports:
          - containerPort: 9100
            protocol: TCP
            name: telemetry
          args:
              - --no-collector.arp
              - --no-collector.bcache
              - --no-collector.bonding
              - --no-collector.buddyinfo
              - --no-collector.conntrack
              - --no-collector.cpufreq
              - --no-collector.diskstats
              - --no-collector.drbd
              - --no-collector.edac
              - --no-collector.entropy
              - --no-collector.filefd
              - --no-collector.hwmon
              - --no-collector.infiniband
              - --no-collector.interrupts
              - --no-collector.ipvs
              - --no-collector.ksmd
              - --no-collector.logind
              - --no-collector.mdadm
              - --no-collector.meminfo
              - --no-collector.meminfo_numa
              - --no-collector.mountstats
              - --no-collector.netclass
              - --no-collector.netdev
              - --no-collector.nfs
              - --no-collector.nfsd
              - --no-collector.ntp
              - --no-collector.perf
              - --no-collector.pressure
              - --no-collector.processes
              - --no-collector.qdisc
              - --no-collector.runit
              - --no-collector.sockstat
              - --no-collector.stat
              - --no-collector.supervisord
              - --no-collector.systemd
              - --no-collector.tcpstat
              - --no-collector.textfile
              - --no-collector.time
              - --no-collector.timex
              - --no-collector.uname
              - --no-collector.vmstat
              - --no-collector.wifi
              - --no-collector.xfs
              - --no-collector.zfs        
        - name: fluent-bit
          image: $fluentBitImage
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FIDDLER_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['fiddler.ai/component']
          volumeMounts:
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/
          - name: log
            mountPath: /var/log
      volumes:                
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: log
          emptyDir: {}
---
# Source: fiddler/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: db-bootstrap-657203ab9245d1bb85f341a6ed186da2c105a1c7
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler-database
  annotations:
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: fiddler-database
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
        - name: check-redis-ready
          image: $redisImage
          command: ['sh', '-c',
            'response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
            until [ "$response" = "PONG" ];
            do
              echo waiting for redis to be ready;
              response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
              sleep 2;
            done;
            echo ${REDIS_WRITE_URL} is ready to accept connections;']
          env:            
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
      containers:
        - name: db-bootstrap
          image: $dataServiceImage
          imagePullPolicy: Always
          command:
          - bash
          - -c
          - |-
            for i in 1..10; do
              if /app/fiddler2/modules/meta_db/migrate.sh; then
                break
              fi
              echo "Attempt ${i} failed; trying again in $((i ** 2)) seconds..."
              sleep $((i ** 2))
            done
          env:
            - name: SERVICE_NAME
              value: db-upgrade-f2            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)            
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"            
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"            
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
---
# Source: fiddler/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: db-upgrade
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: fiddler-database
  annotations:
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "6100"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: fiddler
        helm.sh/chart: fiddler-1.7.8
        app.kubernetes.io/instance: fiddler
        app.kubernetes.io/managed-by: Helm
        fiddler.ai/component: fiddler-database
    spec:      
      serviceAccountName: fiddler      
      schedulerName: default-scheduler      
      securityContext:
        fsGroup: 3435
        runAsGroup: 3435
        runAsUser: 3435            
      tolerations:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: $postgresImage
          command: ['sh', '-c', 
            'until pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT};
            do echo waiting for database; sleep 2; done;']
          env:            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
        - name: check-redis-ready
          image: $redisImage
          command: ['sh', '-c',
            'response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
            until [ "$response" = "PONG" ];
            do
              echo waiting for redis to be ready;
              response=$(redis-cli -u ${REDIS_WRITE_URL} ping);
              sleep 2;
            done;
            echo ${REDIS_WRITE_URL} is ready to accept connections;']
          env:            
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"
      containers:
        - name: db-upgrade
          image: $dataServiceImage
          imagePullPolicy: Always
          command:
          - bash
          - -c
          - |-
            for i in 1..10; do
              if /app/fiddler2/modules/meta_db/migrate.sh; then
                break
              fi
              echo "Attempt ${i} failed; trying again in $((i ** 2)) seconds..."
              sleep $((i ** 2))
            done
          env:
            - name: SERVICE_NAME
              value: db-upgrade-f2            
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DS_CONFIG_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "port"
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "useSSL"
                  optional: true
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DS_CONFIG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "user"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "password"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: DS_CONFIG_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "dbName"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgDB"
                  optional: true
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgUser"
                  optional: true
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: $hostName-postgres-credentials
                  key: "pgPass"
                  optional: true
            - name: META_DB_URL_ENV_VAR
              value: SQLALCHEMY_DATABASE_URI
            - name: META_DB_PAGE_SIZE
              value: "100"
            - name: SQLALCHEMY_DATABASE_URI
              value: postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)            
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "username"
            - name: CACHE_WRITE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "writeEndpoint"
            - name: CACHE_READ_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "readEndpoint"
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "password"
            - name: CACHE_SCHEME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: "scheme"
            - name: REDIS_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_CACHE_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(CACHE_DATABASE)
            - name: REDIS_STREAM_WRITE_URL
              value: $(CACHE_SCHEME)://$(CACHE_WRITE_ENDPOINT)/$(STREAM_DATABASE)
            - name: REDIS_STREAM_READ_URL
              value: $(CACHE_SCHEME)://$(CACHE_READ_ENDPOINT)/$(STREAM_DATABASE)
            - name: CACHE_DATABASE
              value: "0"
            - name: STREAM_DATABASE
              value: "1"
            - name: REDIS_CACHE_NAMESPACE
              value: $hostName
            - name: REDIS_CACHE_TTL
              value: "86400"
            - name: REDIS_CACHE_MAX_CONNECTIONS
              value: "100"
            - name: REDIS_CACHE_CONNECTION_TIMEOUT
              value: "5"
            - name: META_DB_NO_CACHE
              value: "false"
            - name: CLIENT_SIDE_CACHE_ENABLED
              value: "false"            
            - name: USE_CLICKHOUSE
              value: "True"
            - name: CH_HOST
              valueFrom:
                secretKeyRef:
                  key: "host"
                  name: clickhouse-credentials
            - name: CH_PORT
              valueFrom:
                secretKeyRef:
                  key: "port"
                  name: clickhouse-credentials
            - name: CH_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: "adminUser"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: "adminPassword"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_DEFAULT_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "defaultDB"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_CLUSTER
              valueFrom:
                secretKeyRef:
                  key: "cluster"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_SECURE
              valueFrom:
                secretKeyRef:
                  key: "secure"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_VERIFY
              valueFrom:
                secretKeyRef:
                  key: "verify"
                  name: clickhouse-credentials
                  optional: true
            - name: CH_HTTP_PORT
              valueFrom:
                secretKeyRef:
                  key: "http_port"
                  name: clickhouse-credentials
            - name: CH_HTTP_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: "http_protocol"
                  name: clickhouse-credentials
            - name: CH_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: clickhouse-credentials
            - name: CH_PASSWD
              valueFrom:
                secretKeyRef:
                  key: "password"
                  name: clickhouse-credentials
            - name: CH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: "database"
                  name: clickhouse-credentials
            - name: CH_DISTRIBUTED
              value: "True"
            - name: CH_MULTI_SHARD
              value: "true"
            - name: CH_BUFFER_TABLE
              value: "false"            
            - name: AWS_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: endpointURL
                  optional: true
            - name: BLOB_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: storeType
                  optional: true
            - name: AWS_S3_BLOB_STORE_BUCKET
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: bucketName
            - name: BLOB_STORE_KEY_PREFIX
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: keyPrefix
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: accessKeyId
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secretAccessKey
                  optional: true
            - name: SSE_CUSTOMER_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerAlgorithm
                  optional: true
            - name: SSE_CUSTOMER_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKey
                  optional: true
            - name: SSE_CUSTOMER_KEY_MD5
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseCustomerKeyMD5
                  optional: true
            - name: SSE_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSKeyID
                  optional: true
            - name: SSE_KMS_ENCRYPTION_CONTEXT
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: sseKMSEncryptionContext
                  optional: true
            - name: SERVER_SIDE_ENCRYPTION
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: serverSideEncryption
                  optional: true
---
# Source: fiddler/templates/envoy/ingress-envoy.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: envoy
  namespace: $namespace
  labels:
    app.kubernetes.io/name: fiddler
    helm.sh/chart: fiddler-1.7.8
    app.kubernetes.io/instance: fiddler
    app.kubernetes.io/managed-by: Helm
    fiddler.ai/component: envoy
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "10240m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: envoy
                port: 
                  name: http
      host: $hostName.$domain
